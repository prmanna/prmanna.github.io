[{"content":"My name is Prasenjit Manna. I am a Technical Leader of Service Provider Optical Team at Cisco Systems, Bangalore. My area of work is Routing, Optical, Manageability, Embedded Systems-Networking.\nThis is my blog. Self hosted, no sponsors, purely personal. I am speaking on this site solely for myself and not for any employers, past or present. I pay all costs, there are no ads, sponsors or paid content. Any conflicts will be disclosed in the post.\n","href":"/","title":"Home"},{"content":"","href":"/authors/","title":"Authors"},{"content":"","href":"/blogs/","title":"Blogs"},{"content":"","href":"/categories/blogs/","title":"blogs"},{"content":"","href":"/categories/","title":"Categories"},{"content":"Resonating Articles by Benjamin Hardy\n \u0026ldquo;Impossible Goals\u0026rdquo; Are Easier and More Practical than \u0026ldquo;Possible Goals.\u0026rdquo; Here\u0026rsquo;s Why. Make Decisions Today That Will Impress Your Friends In 20 Years 10 Steps to Become a Millionaire in 5 Years (or Less) The Most Important Skill For Interacting With People 23 Smart Ways To Increase Your Confidence, Productivity, and Income How To Achieve Your 10-Year Plan In The Next 6 Months Why Most People Never Get What They Want Want To Become A Multi-Millionaire? Do These 15 Things Immediately. One Behavior Separates The Successful From The Average The Secret to Upgrading Your Entire Life (Money, Happiness, etc.) In 3-5 Years 8 Ways To Reach Your Goals Extremely Fast This Is How You Train Your Brain to Get What You Really Want How To Learn In 2 Days What Normally Takes 6 Months 21 Ways to Reach Your Dreams within 12 Months How to Turn Your Heroes Into Mentors and Make $$$ Doing What You Love One Thing Separates Creators From Consumers Tells about success Want To Become A Multi-Millionaire? Do These 14 Things Immediately.  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-12-05-advices-by-benjamin-hardy/","title":"Motivating Psychology Articles by Benjamin Hardy"},{"content":"","href":"/authors/prmanna/","title":"prmanna"},{"content":"","href":"/tags/mental-model/","title":"mental model"},{"content":"","href":"/categories/mental-model/","title":"mental model"},{"content":"Mental Models These two places where you\u0026rsquo;ll find the most useful mental models.\n Tools for better thinking (untools.co) Mental Model Examples (50+) That Will Make You More Successful (fronterablog.com)  ","href":"/writing/evergreen-mental-models/","title":"Mental Models"},{"content":"","href":"/tags/","title":"Tags"},{"content":"","href":"/writing/","title":"Writings"},{"content":"APNIC article on SR TI-LFA by Ron Bonica.\nSR TI-LFA: Segment Routing and Topology Independent Loop-Free Alternates\nNANOG 79 Recording\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-09-25-ti-lfa/","title":"Article on SR TI-LFA"},{"content":"","href":"/categories/segment-routing/","title":"Segment Routing"},{"content":"Few career advices, I leant over the years\nBite Tips\n Always learn Stay Humble You should be valued Be mindful to your risk tolerance Be discoverable Dont stay comfortable for too long Decisions are not permanent Run Marathon, not sprint People, not jobs, are permanent Try lots of different things  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-09-17-misc-advices/","title":"Misc Advices on Career"},{"content":"  Athletes train. Musicians train. Performers train. But knowledge workers don’t. Learn Like an Athlete\n  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-08-20-learn-like-an-athlete/","title":"Learn Like an Athlete"},{"content":"notes to self  The deeper you go, the better it gets.\n  You\u0026rsquo;ll never regret a workout\n  Gift time, not things.\n  Everything will be different in six months.\n  Write your goals down. Cross \u0026lsquo;em out. Write new ones.\n  Email the people you admire and tell them that. It\u0026rsquo;ll make their day. And it\u0026rsquo;ll make yours when they write back.\n  Learning is a lifelong process.\n ","href":"/quotes/notes-to-self/","title":"notes-to-self"},{"content":"","href":"/tags/quotes/","title":"quotes"},{"content":"","href":"/categories/quotes/","title":"quotes"},{"content":"Best Podcast Episodes of all time   Naval Ravikant on The Knowledge Project\n A deep dive on reading, happiness, decision making, habits, and mental models.\n   Elon Musk: Neuralink, AI, Autopilot, and the Pale Blue Dot\n A glimpse into what the future looks like, including Neuralink, AI, Autopilot, and the Pale Blue Dot.\n   A deep dive into everything sleep by Matthew Walker\n \u0026ldquo;I think that sleep may be one of the most significant lifestyle factors that determine your risk ratio for Alzheimer\u0026rsquo;s disease.\u0026rdquo;\n   Balaji Srinivasan on The Tim Ferriss Show.\n Balaji lives at least 20 years in the future—this podcast gives you a sense of what that future looks like.\n   How to Cram 2 Months of Learning into 1 day\n Josh Waitzkin on The Tim Ferriss Show.\n   Keith Rabois on the North Star Podcast. \n The future of education, how to find undiscovered talent in society, the power of accumulating advantages, and how to raise the level of ambition in society.\n   Annie Duke on the A16z Podcast. \n How to improve your long-term decision-making.\n   ","href":"/reading/podcasts/","title":"Best Podcasts"},{"content":"","href":"/tags/podcast/","title":"podcast"},{"content":"","href":"/categories/podcast/","title":"podcast"},{"content":"A Glimpse At Two Approaches To Segment Routing\nTopic Covered:\n SR-MPLS Vs. SRv6 SRv6 Adoption Challenges Hardware \u0026amp; Software Support For SRv6  Appendix:\nby Clarence Filsfils\n What is SRv6 network programming? SRv6: Deployed use-cases SRv6 micro-instructions  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-06-03-glimpse-of-segment-routing-approach/","title":"A Glimpse At Two Approaches To Segment Routing"},{"content":"The Joy of Small Projects\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-05-24-joy-of-small-projects/","title":"The Joy of Small Projects"},{"content":"Deliberate Practice by Jason Shen\nThe Complete Guide to Deliberate Practice\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-05-16-deliberate-practice/","title":"Deliberate Practice by Jason Shen"},{"content":"Bunch of unsolicited advices by Kevin Kelly\nAdvice Set I\nAdvice Set II\nAdvice Set III\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-05-11-advice-by-kevin-kelly/","title":"Bunch of unsolicited advices by Kevin Kelly"},{"content":"New discussion in IRTF - Introduction to Semantic Routing\nSee the recording at 47 min.\n  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-04-18-semantic-routing/","title":"Semantic Routing - new concept"},{"content":"This is really awesome. New generation cmd line tools.\nA list of new(ish) command line tools compiled by Julia.\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-04-17-list-of-newish-command-line-tools/","title":"A list of new(ish) command line tools"},{"content":"","href":"/tags/linux-tool/","title":"linux tool"},{"content":"In the job, if you do good work, it will be recognized. At the same time, it is important to remember, specially at the time of appraisal cycle. It will help you and your manager to present your case wisely. Instead of struggling to prepare a list of achievements when needed, it will be better to keep it updated once in every month. Julia Evans has written a good article on this.\nGet your work recognized: write a brag document\n\u0026lsquo;brag\u0026rsquo; means - \u0026lsquo;to talk too proudly about something\u0026rsquo;\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-04-04-get-your-work-recognized/","title":"Get your work recognized - write a brag document"},{"content":"Summary:\n Read the abstract (if provided)* Read the introduction. Read the conclusion. Skim the middle, looking at section titles, tables, figures, etc.—try to get a feel for the style and flow of the article.   Is it methodological, conceptual, theoretical (verbal or mathematical), empirical, or something else? Is it primarily a survey, a novel theoretical contribution, an empirical application of an existing theory or technique, a critique, or something else?   Go back and read the whole thing quickly, skipping equations, most figures and tables. Go back and read the whole thing carefully, focusing on the sections or areas that seem most important.  Appendix:\n How to Read an Academic Article How to read a paper, mirror  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-03-23-how-to-read-a-paper/","title":"How to read a paper"},{"content":"  In general, you might want to grow in your software engineering career, but:\nwhat does growth mean? how can you achieve it? who decides if you are ready to grow? where do you start?\n  How to achieve career growth: opportunities, skills \u0026amp; sponsors\nThis is a very insightful article. It clearly depicts the importance of self-awareness and drive the grown by yourself.\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-03-19-how-to-achieve-career-growth/","title":"How to achieve career growth"},{"content":"Managing Yourself by Subbu Allamaraju\nSummary:\n You’re the CEO of yourself — a one-person enterprise — act like one As a CEO, every day, you get to decide how you’re going to invest your time, which is your primary fixed capital.  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-03-16-managing-yourself/","title":"Managing Yourself"},{"content":"","href":"/tags/books/","title":"books"},{"content":"","href":"/categories/books/","title":"books"},{"content":"","href":"/tags/data-center/","title":"data-center"},{"content":"The IEEE 802.3 Ethernet standards have been evolved exponentially. This is one of the driving force for the massive scale data centres, which is driving our cloud.\nIEEE 802.3 Data Center Ethernet Optical Standards    Year Ethernet Speed Designation Optical Data Rate Wavelength Fiber Count MMF(km) SMF (km)     1987 10 MbE FOIRL 12.5 M 850 2 1 -   1993 10 MbE 10BASE-FB 12.5 M 850 2 2 -   1993 10 MbE 10BASE-FL 12.5 M 850 2 2 -   1995 100 MbE 100BASE-FX 125 M 1310 2 2 -   1998 1 GbE 1000BASE-SX 1.25 G 850 2 0.550 -   1998 1 GbE 1000BASE-LX 1.25 G 1310 2 0.550 2   2002 10 GbE 10GBASE-SR 10 G 850 2 0.400 -   2002 10 GbE 10GBASE-LR 10 G 1310 2 - 10   2002 10 GbE 10GBASE-ER 10 G 1550 2 - 40   2002 10 GbE 10GBASE-LX4 3.125 G 10G-CWDM 2 0.300 10   2005 100 MbE 00BASE-BX10 125 M 1310/1550 1 - 10   2005 100 MbE 00BASE-LX10 125 M 1310 2 - 10   2005 1 GbE 1000BASE-BX10 1.25 G 1310/1550 1 - 10   2005 1 GbE 1000BASE-LX10 1.25 G 1310 2 - 10   2006 10 GbE 10GBASE-LRM 10 G 1310 2 0.220 -   2010 100 GbE 100GBASE-SR10 10 G 850 20 0.150 -   2010 40 GbE 40GBASE-SR4 10 G 850 8 0.150 -   2010 40 GbE 40GBASE-LR4 10 G CWDM 2 - 10   2010 40 GbE 40GBASE-ER4 10 G CWDM 2 - 40   2010 100 GbE 100GBASE-LR4 25 G LAN-WDM 2 - 10   2010 100 GbE 100GBASE-ER4 25 G LAN-WDM 2 - 40   2011 40 GbE 40GBASE-FR 40 G 1550 2 - 2   2015 100 GbE 100GBASE-SR4 25 G 850 8 0.100 -   2016 25 GbE 25GBASE-SR 25 G 850 2 0.100 -   2017 25 GbE 25GBASE-LR 25 G 1310 2 - 10   2017 25 GbE 25GBASE-ER 25 G 1310 2 - 40   2017 200 GbE 200GBASE-DR4 50 G 1310 8 - 0.500   2017 200 GbE 200GBASE-FR4 50 G CWDM 2 - 2   2017 200 GbE 200GBASE-LR4 50 G LAN-WDM 2 - 10   2017 400 GbE 400GBASE-FR8 50 G extLAN-WDM 2 - 2   2017 400 GbE 400GBASE-LR8 50 G extLAN-WDM 2 - 10   2017 400 GbE 400GBASE-SR16 25 G 850 32 0.100 -   2017 400 GbE 400GBASE-DR4 100 G 1310 8 - 0.500   2018 50 GbE 50GBASE-SR 50 G 850 2 0.100 -   2018 100 GbE 100GBASE-SR2 50 G 850 4 0.100 -   2018 200 GbE 200GBASE-SR4 50 G 850 8 0.100 -   2018 50 GbE 50GBASE-FR 50 G 1310 2 - 2   2018 50 GbE 50GBASE-LR 50 G 1310 2 - 10   2018 100 GbE 100GBASE-DR 100 G 1310 2 - 0.500   2020 400 GbE 400BASE-SR8 50 G 850 16 0.100 -   2020 400 GbE 400BASE-SR4.2 50 G 860/910 8 0.150 -    Note: 10G-CWDM = (1275, 1300, 1325, 1350 nm); CWDM = coarse wavelength-division multiplexing (grid) = (1271, 1291, 1311, 1331 nm); LAN-WDM = local area network – wavelength-division multiplexing (grid) = (1295.56, 1300.05, 1304.58, 1309.14 nm); ext(ended) LAN-WDM = (1273.54, 1277.89, 1282.26, 1286.66, 1295.56, 1300.05, 1304.58, 1309.14 nm)\nNon-IEEE 802.3 100 Gb Data Center Ethernet Optical Standards    Designation Organization Fiber Wavelength Fiber count Max reach(km) Remarks     ESR4 Consensus MMF 850 8 0.300 Extended-range SR4   SWDM4 MSA MMF SWDM 2 0.100    BI-DI Proprietary MMF 860/910 2 0.100 50G Technology   PSM4 MSA SMF 1310 2 0.500    CWDM4 MSA SMF CWDM 2 2    CLR4 MSA SMF CWDM 2 2 No FEC required   CWDM4/OCP MSA SMF CWDM 2 0.500 Temperature range (15–45 C)   4WDM-10 MSA SMF CWDM 2 10    4WDM-20 MSA SMF LAN-WDM 2 20    4WDM-40 MSA SMF LAN-WDM 2 40    ER4-lite Consensus SMF LAN-WDM 2 35    ColorZ Proprietary SMF DWDM 2 80 Metro data center interconnect; 50G Technology   100GBASE-FR MSA SMF 1310 2 2 100G technology   100GBASE-LR MSA SMF 1310 2 10 100G Technology    Note: SWDM = short-wavelength-division multiplexing = (850, 880, 910, 940 nm). FEC = forward-error correction\nNon-IEEE 802.3 400 Gb Data Center Ethernet Optical Standards    Designation Organization Fiber Wavelength (nm) Fiber count Max reach(km) Remarks     400GBASE-FR4 MSA SMF CWDM 2 2 100G Technology   400GBASE-LR4 MSA SMF CWDM 2 10 100G Technology   400G ZR OIF SMF DWDM 2 120 Metro data center interconnect; 400G coherent technology    Join my email list to get direct access to new blog posts.\n ","href":"/writing/2022-03-12-ethernet-optical-standards/","title":"Ethernet Optical Standards"},{"content":"Currently Reading  Coming Soon.  Engineering Books  Computer Networks: A Systems Approach (The Morgan Kaufmann Series in Networking) | Online/Free Copy - It explores the key principles of computer networking, using real world examples from network and protocol design.   Software-Defined Networks: A Systems Approach | Online/Free Copy - Software-Defined Networks (SDN) are transforming the Internet by replacing bundled, proprietary hardware and control software. SDN is being embraced by cloud providers, telcos, and enterprises, as it enables a new era of innovation in networking. This book provides a comprehensive introduction to SDN from the perspective of those who are developing and leveraging the technology.   Edge Cloud Operations: A Systems Approach | Online/Free Copy - Everyone uses the cloud to either access or deliver services, and those services are moving to the edge, where the real world meets the virtual. And while the hyperscaler cloud providers are eager to manage those edge clouds as an extension of their data centers, they do not have a monopoly on the know-how to do so. This book lays out a roadmap that a small team of engineers followed over the course of a year to stand up, operationalize, and then continue to operate an edge cloud, the Aether platform.   Computer Networking : Principles,Protocols and Practice - Computer Networking : Principles, Protocols and Practice is an open-source ebook that explains the main principles of Computer Networking and the key protocols that are used on the Internet. The ebook is intended to be used for an upper-level undergraduate networking course.  Optical  Springer Handbook of Optical Networks - This is a in-depth book on optical networking for all types of deployment. This is a bible. You have to use this as reference book. As of now, I have concentrated on the data center networking and its related chapters.  Engineering Career Books  Coming Soon  Generic Books  Coming Soon  ","href":"/writing/evergreen-my-reading-list/","title":"My Reading List"},{"content":"Table of contents  Indirect Topologies  Tree Fat Tree   Direct Topologies  All-to-All HyperX Flattened Butterfly Topology Torus DCell \u0026amp; DCube    The network topologies can be classified into tree and non-tree based topologies. This is very common observation in topology. There is another way to connect nodes are direct and indirect.\nIndirect Topologies Tree The tree topologies are simple and broadly used in data center networks. Tree topologies may have either two or three levels. In a two-level tree, switches at the core level connect the switches at the lower level, which are referred to as edges. Servers are located at the leaves and are connected to the switches at the edge level. In a three-level tree, an intermediate level called aggregation is added between the core and edge levels.\nTree is simple , but has multiple drawbacks, performance and reliability of switches should increase as we go higher in the topology levels, which would require different switches for different levels and, in turn, a move away from using commodity switches for such systems.\nFat Tree The fat tree is an extension to tree topologies. This is widely used in commercial data center networks. Fat trees were originally proposed by Leiserson in 1985. While there have been several attempts to formalize and use fat trees since then, we found the method used by Al-Fares et al. to be the most intuitive and comprehensive.\nSimilar to three-level tree topologies, fat trees also consist of three levels: core, aggregation, and edges. *Al-*Fares et al. adds the POD to the terminology, which consists of aggregation switches, edge switches, and servers. A k-ary fat tree contains (k/2)^2 k-port core switches and k PODs. Each core switch is connected to the aggregation layer of each POD through one port (the i-th port of any core switch is connected to POD i). Each POD has two layers of k=2 k-port switches. Switches in the upper layer (i.e., aggregation layer) are connected to core switches using k=2 of their ports. The remaining k=2 ports are used to connect to k=2 switches at the lower layer (i.e., edge layer). Each k-port switch at the edge layer uses k=2 of its ports to connect to the aggregation layer and the remaining ports to directly connect to k=2 hosts. Therefore, a k-ary fat-tree provides support for a total of k^3/4 hosts using k port switches.\nUnlike tree topologies, fat trees can use commodity off-the-shelf switches at all levels. Thus, fat trees offer more flexibility and can be more cost effective compared to tree topologies.\nDirect Topologies All-to-All The all-to-all topology is a fully mesh topology where all the TOR connected to each other. This is a simple topology, but has few limitations, like scalability of TOR switch ports. The network growth will be limited by number of ports on the TOR switch. Another limitation is cabling, high number of cabling required.\nHyperX The HyperX topology, introduced for the first time by Ahn et al., can be derived from the all-to-all topology by dividing the nodes into groups (or dimensions) and by removing some intergroup links. Within a group, all nodes are fully connected. Between the groups, each node connects to all the nodes in the other groups with the same positions or coordinates. This architecture allows us to increase the scalability of the system at the expense of a larger diameter and a higher average hop count compared to the all-to-all.\nIn the example below, the ToR switch has four ports for inter-rack communication. This would allow us to interconnect only five racks in a full-mesh topology. By using HyperX, up to eight or nine racks can be interconnected at the expense of increasing the network diameter.\nJ.H. Ahn, N. Binkert, A. Davis, M. McLaren, R.S. Schreiber: HyperX: Topology, routing, and packaging of efficient large-scale networks. In: Proc. Conf. High Perform. Comput. Netw. Storage Anal., Portland (2009)\nFlattened Butterfly Topology Another popular topology is the flattened butterfly (FB) topology [23.42, 43], typically represented in rows and columns, as shown in Fig. 23.8. Each node (or ToR) is fully connected with all the nodes in the same row and column. In practice, we can consider the rows and columns as two different dimensions of a HyperX.\nJ. Kim, W.J. Dally, D. Abts: Flattened butterfly: a cost-efficient topology for high-radix networks, SIGARCH Comput. Archit. News 35, 126–137 (2007) Local Copy\nW. Dally, B. Towles: Principles and Practices of In- terconnection Networks (Morgan Kaufmann, New York 2003)\nTorus The torus topology can also be derived from the HyperX topology when assuming that each dimension is not fully connected but simply interconnected based on a ring topology.\nW. Dally, B. Towles: Principles and Practices of In- terconnection Networks (Morgan Kaufmann, New York 2003)\nW.J. Dally: Performance analysis of k-ary n-cube interconnection networks, IEEE Trans. Comput. 39, 775–785 (1990)\nDCell \u0026amp; DCube There are another two topology for data center networks.\nDCell: C. Guo, H. Wu, K. Tan, L. Shi, Y. Zhang, S. Lu: DCell: a scalable and fault-tolerant network structure for data centers, ACM SIGCOMM Comput. Commun. 38(4), 75–86 (2008) Local Copy\nDCube: G. Wang, D.G. Andersen, M. Kaminsky, M. Kozuch, T. Ng, K. Papagiannaki, M. Glick, L. Mummert: Your data center is a router: The case for reconfigurable optical circuit switched paths, ACM SIGCOMM Com- put. Commun. Rev. SIGCOMM 40(4), 327–338 (2010) Local Copy\nJoin my email list to get direct access to new blog posts.\n ","href":"/writing/2022-02-26-dc-topologies/","title":"Data Center Topologies"},{"content":"Optimizing Workspace for Productivity, Focus, \u0026amp; Creativity by Juan Pablo Aranovich\nSummary:\n Bright lights during phase 1 of the day. Place visual focus direct in front of you. Restricted visual window. Put screens at nose level (at least). Avoid reclining Half stand and half sited work. Avoid white noise. Pursue 40 hertz binaural beats during work bout or prior to work bout. Stationary tread mill increases alertness and focus. Cathedral effect: focused and analytical work: low ceiling space. Creative work: high ceiling environment. Limit interruptions. Changing environments might be beneficial.  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-02-25-optimizing-workspace-for-productivity-focus-creativity/","title":"Optimizing Workspace For Productivity, Focus, \u0026 Creativity"},{"content":"SCION vs. Segment Routing\nBook, papers, videos, tutorials - https://www.scion-architecture.net\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2022-02-14-scion-segment-routing/","title":"SCION vs. Segment Routing"},{"content":"People \u0026amp; Blogs  Paul Graham - Essays Marc Andreessen - Pmarca Guide to Personal Productivity Morgan Housel Naval Ravikant Sam Altman - Idea Generation, How To Be Successful, The days are long but the decades are short Julian Shapiro - Blogs Sriram Krishnan Ryan Hoover Patrick Collison David Perell Tiago Forte Will Larson - Work on what matters, Systems Thinking, Some career advice Gergely Orosz Julia Evans Elad Gil - \u0026ldquo;Career Decisions\u0026rdquo; (in Silicon Valley / tech) Ben Thompson - Every business school should have a course on Aggregation Theory. Or learn it from the master himself), the best analyst in technology. Andrew Wilkinson - “Lazy Leadership” Dan Luu- What to learn Subbu Allamaraju - Managing Yourself, On Influencing  Appendix: related posts\n Julia Evans  Appendix: Interesting links\n A Library Of 5 Minute Reads To Grow Your Startup (marketingexamined.com)  ","href":"/reading/blogroll/","title":"Blogroll"},{"content":"","href":"/tags/blogroll/","title":"blogroll"},{"content":"","href":"/categories/blogroll/","title":"blogroll"},{"content":"Books/Blogs  My Reading List Programming Books Programming Blogs Mental Models Books \u0026amp; Paper Recommendation by smart folks  ","href":"/reading/books-blogs/","title":"Books \u0026 Blogs"},{"content":"Interesting Papers   Knowledge-Defined Networking public copy\n The research community has considered in the past the application of Artificial Intelligence (AI) techniques to control and operate networks. A notable example is the Knowledge Plane proposed by D.Clark et al. However, such techniques have not been extensively prototyped or deployed in the held yet. In this paper, we explore the reasons for the lack of adoption and posit that the rise of two recent paradigms: Software-Defined Networking (SDN) and Network Analytics (NA), will facilitate the adoption of AI techniques in the context of network operation and control. We describe a new paradigm that accommodates and exploits SDN. NA and AI. and provide use-cases that illustrate its applicability and benefits. We also present simple experimental results that support, for some relevant use-cases, its feasibility. We refer to this new paradigm as Knowledge-Defined Networking (KDN).\n   Jupiter Rising: A Decade of Clos Topologies and Centralized Control in Google’s Datacenter Network public copy\n We present our approach for overcoming the cost, operational complexity, and limited scale endemic to datacenter networks a decade ago. Three themes unify the five generations of datacenter networks detailed in this paper. First, multi-stage Clos topologies built from commodity switch silicon can support cost-effective deployment of building-scale networks. Second, much of the general, but complex, decentralized network routing and management protocols supporting arbitrary deployment scenarios were overkill for single-operator, pre-planned datacenter networks. We built a centralized control mechanism based on a global configuration pushed to all datacenter switches. Third, modular hardware design coupled with simple, robust software allowed our design to also support inter-cluster and wide-area networks. Our datacenter networks run at dozens of sites across the planet, scaling in capacity by 100x over ten years to more than 1Pbps of bisection bandwidth.\n   ","href":"/reading/engg-papers/","title":"Engg Papers"},{"content":"","href":"/tags/engg-paper/","title":"engg-paper"},{"content":"","href":"/categories/engg-paper/","title":"engg-paper"},{"content":"Topics in my writing backlog:\n How internet really works? Distributed systems in networking box Why C language is still exists and its competitor How do you measure your impact on the industry?  ","href":"/writing/writing-backlog/","title":"Writing backlog"},{"content":"","href":"/tags/gnmi/","title":"GNMI"},{"content":"","href":"/tags/netconf/","title":"netconf"},{"content":"In the last article, NETCONF vs RESTCONF I have explained the difference between netconf and restconf and their use-cases. Netconf has very rich functionality, whereas restconf has matching functionality. Restconf has opened the door for the framework with REST-based system and infrastructure.\nThe gNMI (gRPC Network Management Interface) protocol comes from the openconfig consortium, a group of network operators led by Google, with the following mission - \u0026ldquo;OpenConfig is an informal working group of network operators sharing the goal of moving our networks toward a more dynamic, programmable infrastructure by adopting software-defined networking principles such as declarative configuration and model-driven management and operations\u0026rdquo;.\nThe initial focus for openconfig was to develop vendor-neutral yang models for operator needs. It started with Google\u0026rsquo;s requirements, later all the operators joined hands. Right now, this is the most active group to add new data models. The group also developed gNMI as a management protocol for configuration and streaming telemetry management. Note that gNMI is based on gRPC as a transport protocol. The gNMI supports more encoding, not just protobuf [more details below]. The protobuf is more compact on the wire, so performance-wise more advantageous. But, operationally it is more complex. Also the distribution of proto files is more challenging, especially upgrade scenarios. It adds more complexities.\nGNMI Interface: service gNMI { rpc Capabilities(CapabilityRequest) returns (CapabilityResponse); rpc Get(GetRequest) returns (GetResponse); rpc Set(SetRequest) returns (SetResponse); rpc Subscribe(stream SubscribeRequest) returns (stream SubscribeResponse); }     gNMI NETCONF RESTCONF     Serialization Protobuf or JSON XML XML or JSON   Transport gRPC (HTTP/2.0) SSH HTTP/TLS/TCP/IP   Diff oriented Yes Returns only elements of the tree that have changed from last read No Always returns entire sub-tree snapshot No   streaming telemetry Yes NetConf notification No   Operation semantics gNMI specific. Single-target, single-shot, sequenced transactions. NETCONF specific; networkwide transactions. RESTCONF specific, based on HTTP verbs. Single-target, single-shot transactions.    ","href":"/writing/2022-01-31-netconf-vs-gnmi/","title":"NETCONF vs GNMI"},{"content":"","href":"/tags/programmability/","title":"Programmability"},{"content":"Here are few book recommendations by smart people.   Book Recommendations, Holiday Book Recommendations by Gergely Orosz\n  Book Recommendations by Will Larson\n  Leadership Library by Philip Paetz\n  Paper recommendations by smart people.  Technical Papers by Will Larson  ","href":"/writing/evergreen-books-reco-by-smart-folks/","title":"Book \u0026 Paper Recommendations by smart folks"},{"content":"Eli Bendersky This guy is allrounder, this is a collection of various topic. “the C++ blog” - very good.\nAppendix: related posts  Programming Blog by Dan Luu  ","href":"/writing/evergreen-programming-blogs/","title":"Programming Blogs"},{"content":"Programming Books Skiena; The Algorithm Design Manual The longer, more comprehensive, more practical. It\u0026rsquo;s similar in that it attempts to teach you how to identify problems, use the correct algorithm, and give a clear explanation of the algorithm. This also describess the real world programming.\nMcDowell; Cracking the Coding Interview Some problems and solutions, with explanations, matching the level of questions you see in entry-level interviews at Google, Facebook, Microsoft, etc. I usually recommend this book to people who want to pass interviews but not really learn about algorithms. It has just enough to get by, but doesn\u0026rsquo;t really teach you the why behind anything. If you want to actually learn about algorithms and data structures, see below.\nCLRS; Introduction to Algorithms This book somehow manages to make it into half of these “N books all programmers must read” lists despite being so comprehensive and rigorous that almost no practitioners actually read the entire thing. It\u0026rsquo;s great as a textbook for an algorithms class, where you get a selection of topics. As a class textbook, it\u0026rsquo;s nice bonus that it has exercises that are hard enough that they can be used for graduate level classes.\nDemaine; Advanced Data Structures This is a set of lectures and notes and not a book, but if you want a coherent (but not intractably comprehensive) set of material on data structures that you\u0026rsquo;re unlikely to see in most undergraduate courses, this is great. The notes aren\u0026rsquo;t designed to be standalone, so you\u0026rsquo;ll want to watch the videos if you haven\u0026rsquo;t already seen this material.\nOperating Systems Silberchatz, Galvin, and Gagne; Operating System Concepts It covers concepts at a high level and hits the major points, but it\u0026rsquo;s lacking in technical depth, details on how things work, advanced topics, and clear exposition.\nCox, Kasshoek, and Morris; book, source This book is great! It explains how you can actually implement things in a real system, and it comes with its own implementation of an OS that you can play with. By design, the authors favor simple implementations over optimized ones, so the algorithms and data structures used are often quite different than what you see in production systems.\nThis book goes well when paired with a book that talks about how more modern operating systems work, like Linux or Windows.\nAppendix: related posts If you would like to go deeper and comprehensive knowledge on programming, there are reference by\n Programming book list by Dan Luu Book Recommendations by Gergely Orosz  ","href":"/writing/evergreen-programming-books/","title":"Programming Books"},{"content":"","href":"/tags/programming-blogs/","title":"programming-blogs"},{"content":"","href":"/categories/programming-blogs/","title":"programming-blogs"},{"content":"","href":"/tags/programming-books/","title":"programming-books"},{"content":"","href":"/categories/programming-books/","title":"programming-books"},{"content":"Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-12-15-excercise-desk-stretches/","title":"Exercise - Daily Desk Stretches"},{"content":"ISP Design Guide: Separation of network functions – introduction and overview by Kevin Myers\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-11-24-isp-design-guide/","title":"ISP Design Guide"},{"content":"NETCONF vs RESTCONF\nNETCONF is a protocol that was developed to provide a standardized interface to Network Element(NE)/Device to retrieve and manipulate configuration data.\nTill now, CLI is the standard interface to interact with NE. but this is mainly for human. On the other hand, the NETCONF is mainly used for network automation.\nCLI normally defined for human in user friendly way.\n   Content Config, Oper Data     Operations \u0026lt;get-config\u0026gt;, \u0026lt;edit-config\u0026gt;, \u0026lt;copy-config\u0026gt;, \u0026lt;delete-config\u0026gt;, \u0026lt;lock\u0026gt;, \u0026lt;unlock\u0026gt;, \u0026lt;close-session\u0026gt;, \u0026lt;kill-session\u0026gt;   Messages \u0026lt;rpc\u0026gt;, \u0026lt;rpc-reply\u0026gt;, \u0026lt;notification\u0026gt;   Secure Transport SSH, TLS    RESTCONF is an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in NETCONF.\n         Content: {+restconf}/data Config, Oper Data; Data-combined configuration and state data resources   Operations: {+restconf}/operations operations-container that provides access to the data-model- specific RPC operations supported by the server   Secure Transport HTTPS     Why do we need RESTCONF when we already have NETCONF?\nFirst of all, we need to think about the trends of the tech industry. It\u0026rsquo;s no secret that businesses all around the world are digitizing themselves through automation. And what is the most popular protocol used in the modern era for automation?\nThe answer to that is HTTP-based REST APIs.\nImagine a company invested a huge sum of money on automating it\u0026rsquo;s business processes through REST APIs. And once that work was complete, they decided to automate their network configuration management. They could easily hit a roadblock at this point. The software they use for automation would need to support the NETCONF protocol. Also, their software developers would need to be skilled up to learn this protocol.\nYou can see the dilemma here. Businesses want to keep their solutions as simple as possible. Ideally, they would use common applications and protocols across their organization.\nThis is where RESTCONF comes to the rescue. It allows users to automate their network infrastructure using familiar RESTful API patterns.\nOperations Similarities:\nNow that we understand the need for RESTCONF, let\u0026rsquo;s do a side-by-side comparison of some of the key lower-level differences between the protocols.\nHOW ARE CRUD (CREATE, READ, UPDATE, DELETE) OPERATIONS DIFFERENTIATED IN A REQUEST?\n   RESTCONF NETCONF     OPTIONS None   HEAD \u0026lt;get-config\u0026gt;, \u0026lt;get\u0026gt;   GET \u0026lt;get-config\u0026gt;, \u0026lt;get\u0026gt;   POST \u0026lt;edit-config\u0026gt; (nc:operation=\u0026ldquo;create\u0026rdquo;)   POST Invoke an RPC operation   PUT \u0026lt;copy-config\u0026gt; (PUT on datastore)   PUT \u0026lt;edit-config\u0026gt; (nc:operation=\u0026ldquo;create/replace\u0026rdquo;)   PATCH \u0026lt;edit-config\u0026gt; (nc:operation depends on patch content)   DELETE \u0026lt;edit-config\u0026gt; (nc:operation=\u0026ldquo;delete\u0026rdquo;)    WHAT FORMAT DOES DATA ENCODING USE?\nThe NETCONF protocol requires RPC messages to always be encoded with XML. The RESTCONF protocol allows data to be encoded with either XML or JSON.\nHOW IS CONFIGURATION DATA AND STATE DATA EXPOSED TO CLIENTS?\nA NETCONF client will use multiple levels of depth in an XML message to specify the location of data. A RESTCONF client with use the resource path in the URL of the request to specify the location of data.\nRESTCONF is Less\n No locking No notion of transaction No candidate config No two-phase commit No Copy-config  References\n NETCONF and YANG Tutorial part 1a: NETCONF and YANG Overview NETCONF - rfc6241 RESTCONF \u0026ndash; rfc8040 Link to IETF 94 Recording: NETCONF, YANG, pyang Link to slides at IETF 94: NETCONF Slides, YANG Slides  ","href":"/writing/2021-11-07-netconf-vs-restconf/","title":"NETCONF vs RESTCONF"},{"content":"","href":"/tags/restconf/","title":"restconf"},{"content":"What is APIs?\nApplication Programming Interfaces (APIs) are module: they take inputs and give you predictable outputs.   At its core, an API is a bunch of code that takes an input and gives you an output\n  Sometimes, companies will make parts of their APIs publicly available, like github, Twitter or Google Maps\n  In modern era, your favourite applications are collection of APIs.\n  In WWW, the programmatic service is provided by the APIs. User/Automation access this service using the API. Whatever the way the service is implemented, it is abstracted from user. So, automation can use this API for their broader usage.\nGenerally, there are two types of APIs. Internal and Public. Internal APIs are used by companies for communicating with their internal applications. They are not open to public. Whereas, companies open ups their dataset with APIs. Interested users can do interesting things with it. A good example is twitter API, which lets people like you interact with tweet data programmatically.\nAPI implementations: SOAP, REST, GRPC\nThere are three major protocols/technologies that developers use to build APIs: SOAP, REST and GRPC.\n1. SOAP:\nSOAP (Simple Object Access Protocol) is the oldest of the API protocols. It was originally released in 1998 by a few Microsoft engineers. It\u0026rsquo;s based on XML. Here\u0026rsquo;s an example of what kind of code you\u0026rsquo;d need to write to work with it:\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;soap:Envelope xmlns:soap=\u0026#34;http://www.w3.org/2003/05/soap-envelope\u0026#34; xmlns:m=\u0026#34;http://www.example.org\u0026#34;\u0026gt; \u0026lt;soap:Header\u0026gt; \u0026lt;/soap:Header\u0026gt; \u0026lt;soap:Body\u0026gt; \u0026lt;m:GetStockPrice\u0026gt; \u0026lt;m:StockName\u0026gt;T\u0026lt;/m:StockName\u0026gt; \u0026lt;/m:GetStockPrice\u0026gt; \u0026lt;/soap:Body\u0026gt; \u0026lt;/soap:Envelope\u0026gt; This is legacy technology now. Companies are moving to new technology now.\n2. REST\nREST API stands for Representational State Transfer and is an architectural pattern for creating web services. It was developed by Roy Fielding in 2000 and has led to a growing collection of RESTful web services that follow the REST principles.\nREST is a ruleset that defines best practices for sharing data between clients and the server. It\u0026rsquo;s essentially a design style used when creating HTTP or other APIs that asks you to use CRUD(create/read/update/delete) functions only, regardless of the complexity.\nREST applications use HTTP methods like GET, POST, DELETE, and PUT. REST emphasizes the scalability of components and the simplicity of interfaces. Not all HTTP APIs are REST APIs. The API needs to meet the following architectural requirements to be considered a REST API:\n A uniform interface: An API must expose specific application resources to API consumers. Client-server independence: The client and the server function independently. The client will only know the URIs that point to the application\u0026rsquo;s resources. These are usually published in the API documentation. Stateless: The server doesn\u0026rsquo;t save any data pertaining to the client request. The client saves this \u0026ldquo;state data\u0026rdquo; on its end (via a cache). Learn more about stateful vs. stateless systems here. Cacheable: Application resources exposed by the API need to be cacheable. Layered: The architecture is layered, which allows different components to be maintained on different servers. Code-on-Demand (COD): This is the only optional REST constraint. This allows the client to receive executable code as a response from the server. In other words, it\u0026rsquo;s the server that determines how specific things get done.  3. gRPC\ngRPC (Remote Procedure Call) is made mostly for distributed systems that optimize for scale and low latency. gRPC is an open-source RPC architecture designed by Google to achieve high-speed communication between microservices. gRPC allows developers to integrate services programmed in different languages. gRPC uses the Protobuf (protocol buffers) messaging format, which is a highly-packed, highly-efficient messaging format for serializing structured data. For a specific set of use-cases, a gRPC API can serve as a more efficient alternative to a REST API.\n BASICS OF AN REST API REQUEST: A. The endpoint\nThe endpoint (or route) is the url you request for. It follows this structure:\n root-endpoint/?\n The root-endpoint is the starting point of the API you\u0026rsquo;re requesting from. The root-endpoint of Github\u0026rsquo;s API is https://api.github.com while the root-endpoint Twitter\u0026rsquo;s API is https://api.twitter.com.\nB. The method\nThe method is the type of request you send to the server. You can choose from these five types below:\n        GET This request is used to get a resource from a server.   POST This request is used to create a new resource on a server. If you perform a `POST` request, the server creates a new entry in the database and tells you whether the creation is successful. In other words, a `POST` request performs an `CREATE` operation.   PUT \u0026amp; PATCH These two requests are used to update a resource on a server. If you perform a `PUT` or `PATCH` request, the server updates an entry in the database and tells you whether the update is successful. In other words, a `PUT` or `PATCH` request performs an `UPDATE` operation   DELETE This request is used to delete a resource from a server.    C. The Headers\nHeaders are used to provide information to both the client and server. It can be used for many purposes, such as authentication and providing information about the body content. HTTP Headers are property-value pairs that are separated by a colon. The example below shows a header that tells the server to expect JSON content.\n{ Content-Type: text/html; charset=UTF-8, Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l } D. The Body\nThe data (sometimes called \u0026ldquo;body\u0026rdquo; or \u0026ldquo;message\u0026rdquo;) contains information you want to be sent to the server. This option is only used with POST, PUT, PATCH or DELETE requests.\n{ user_id: 34, order_date: \u0026#34;2020-01-01\u0026#34;, order_value: \u0026#34;99.99\u0026#34; } Request bodies are generally formatted as JSON (this format of name:value).\nWhere and how to call APIs\na. Browsers\nThe endpoint to get a list of my repos on Github is this: https://api.github.com/users/prmanna/repos\nIf you\u0026rsquo;d like to get a list the repositories that I pushed to recently, you can set sort to push. https://api.github.com/users/prmanna/repos?sort=pushed\nb. Command Line\ncURL is a popular command line tool for making API requests: you just choose your method and endpoint, and then attach any extra data like headers or a request body.\nc. Client Libraries\nInternal and vendor APIs often ship with built in functions for specific programming languages. If your company uses mostly Python for the backend, they might create a library to interact with their APIs and build functions like listOrders() that you can use directly.\nd. IDEs\nLike with the rest of the programming ecosystem, there are specialized tools for querying REST endpoints. The most popular one out there is Postman. it organizes your request into simple form fields, helps autocomplete your headers and body, and lets you store credentials and settings.\nThere are few more alternative for API implementations, like, GraphQL, Thrift, via queuing like RabbitMQ,\nIn the next article, I\u0026rsquo;ll cover the device management/automation using Netconf, restconf.\n","href":"/writing/2021-11-06-what-is-api/","title":"What is APIs?"},{"content":"","href":"/tags/hashing/","title":"hashing"},{"content":"These diagrams are self sufficient to explain.\nTable of contents  1. Web Scaler 2. Consistent Hashing 3. Web Crawler 4. Unique ID Generator for Distributed Systems 5. Key Value Store 6. Rate Limiter 7. Youtube 8. Chat System 9. News Feed System 10. Google Drive  1. Web Scaler 2. Consistent Hashing 3. Web Crawler 4. Unique ID Generator for Distributed Systems 5. Key Value Store Ref: SSTable\n6. Rate Limiter 7. Youtube 8. Chat System 9. News Feed System 10. Google Drive Join my email list to get direct access to new blog posts.\n ","href":"/writing/2021-10-10-web-scaler/","title":"Web Scaler - Diagrams"},{"content":"","href":"/tags/webscaler/","title":"webscaler"},{"content":"","href":"/tags/c++/","title":"c++"},{"content":"Best Ever C++ Tutoriali for C Programmer\n  Code Snip: Part1 | Part2 | Part3\nData Types | Arithmetic | If Statement | Switch Statement | Ternary Operator | Arrays | For Loop | While Loop | Do While Loop | User Input | Convert String | Strings | Vectors | Functions | Recursive Function | File I/O | Exception Handling | Pointers | Reference Operator | Classes / Objects | Private | Static Variables | Public / Encapsulation | Constructors | Static Functions | this | Inheritance | Call Superclass Constructor | Execute Static Method | Virtual Methods | Polymorphism | Abstract Data Type\n#include \u0026lt;string\u0026gt; More details Here\nOperations on strings\n getline() :- This function is used to store a stream of characters as entered by the user in the object memory. push_back() :- This function is used to input a character at the end of the string. pop_back() :- Introduced from C++11(for strings), this function is used to delete the last character from the string.  Capacity Functions\nlength():-This function finds the length of the string resize() :- This function changes the size of string, the size can be increased or decreased. capacity() :- This function returns the capacity allocated to the string, which can be equal to or more than the size of the string. Additional space is allocated so that when the new characters are added to the string, the operations can be done efficiently. shrink_to_fit() :- This function decreases the capacity of the string and makes it equal to the minimum capacity of the string. This operation is useful to save additional memory if we are sure that no further addition of characters have to be made.  Iterator Functions\nbegin() :- This function returns an iterator to beginning of the string. end() :- This function returns an iterator to end of the string. rbegin() :- This function returns a reverse iterator pointing at the end of string. rend() :- This function returns a reverse iterator pointing at beginning of string.  Manipulating Functions\ncopy(“char array”, len, pos) :- This function copies the substring in target character array mentioned in its arguments. It takes 3 arguments, target char array, length to be copied and starting position in string to start copying.  #include \u0026lt;vector\u0026gt; More details Here\nIterators Functions\n begin() – Returns an iterator pointing to the first element in the vector end() – Returns an iterator pointing to the theoretical element that follows the last element in the vector rbegin() – Returns a reverse iterator pointing to the last element in the vector (reverse beginning). It moves from last to first element rend() – Returns a reverse iterator pointing to the theoretical element preceding the first element in the vector (considered as reverse end)  Capacity Functions\n empty() – Returns whether the container is empty. size() – Returns the number of elements in the vector. capacity() – Returns the size of the storage space currently allocated to the vector expressed as number of elements. resize(n) – Resizes the container so that it contains ‘n’ elements. shrink_to_fit() – Reduces the capacity of the container to fit its size and destroys all elements beyond the capacity.  Element Access\n reference operator [g] – Returns a reference to the element at position ‘g’ in the vector at(g) – Returns a reference to the element at position ‘g’ in the vector front() – Returns a reference to the first element in the vector back() – Returns a reference to the last element in the vector  Modifiers Functions\n insert() – It inserts new elements before the element at the specified position push_back() – It push the elements into a vector from the back pop_back() – It is used to pop or remove elements from a vector from the back. erase() – It is used to remove elements from a container from the specified position or range. clear() – It is used to remove all the elements of the vector container emplace() – It extends the container by inserting new element at position emplace_back() – It is used to insert a new element into the vector container, the new element is added to the end of the vector.  Join my email list to get direct access to new blog posts.\n ","href":"/writing/2021-10-03-minimal-cpp-prog-manual/","title":"Learn C++ Programming in 1hr + Code"},{"content":"Table of contents  The Farnam Street - How to Think: The Skill You\u0026rsquo;ve Never Been Taught Zat Rana - Marcus Aurelius: Thinking Clearly Mayo Oshin - Elon Musks' \u0026ldquo;3-Step\u0026rdquo; First Principles Thinking\u0026quot; Ed Boyden - Rules for How to Think   \u0026ldquo;If I had an hour to solve a problem, I\u0026rsquo;d spend 55 minutes thinking about the problem and 5 minutes thinking about solutions.\u0026rdquo; \u0026mdash; Albert Einstein\n We are very good at solving problems. This is been taught in school. This is also important to know \u0026ndash; how to think. This will help to find a better solution to a given problem. Sometimes a badly thought decision can cost you. So, good to have a better model in place. Last few weeks, I was trying to find the better method \u0026ndash; how to think. Here are few of references, which might be helpful.\nThe Farnam Street - How to Think: The Skill You\u0026rsquo;ve Never Been Taught  Thinking means concentrating on one thing long enough to develop an idea about it. Good thinkers understand a simple truth: you can\u0026rsquo;t make good decisions without good thinking and good thinking requires time. If you want to think better, schedule time to think and hone your understanding of the problem.  Zat Rana - Marcus Aurelius: Thinking Clearly   Actively training ourselves to fight the autonomous loop The human brain is immensely efficient, and it\u0026rsquo;s very good at filtering out noise we don\u0026rsquo;t need in our lives. Sometimes, it\u0026rsquo;s too good, and it diverts our attention away from important information, too. It\u0026rsquo;s on you to fight autonomy and look for those details. Set a few times in your day to really look and to listen. Be deliberate in seeking to bypass the compromise made by the autonomous brain.\n  Harnessing objectivity through a different host of eyes We mostly live our lives like we\u0026rsquo;re at the center of reality. It influences how we see, feel, and act. It shifts our perception of the world away from what it truly is. It\u0026rsquo;s important to use tactics that help us see through the clouds.\n  Build a habit of routinely decluttering your mind. The human mind is extremely noisy, but by creating a routine that allows us to clear it up, we can make it less so. By building a habit that focuses on ordering our thoughts, we can declutter the complexity that comes with living in an increasingly busy and crowded world. For example, journaling has been shown to improve health across many different areas of life.\n  Mayo Oshin - Elon Musks' \u0026ldquo;3-Step\u0026rdquo; First Principles Thinking How to Think and Solve Difficult Problems Like a Genius\n  Identify and define your current assumptions\n  Breakdown the problem into its fundamental principles. These fundamental principles are basically the most basic truths or elements of anything. The best way to uncover these truths is to ask powerful questions that uncover these ingenious gems.\n  Create new solutions from scratch Once you\u0026rsquo;ve identified and broken down your problems or assumptions into their most basic truths, you can begin to create new insightful solutions from scratch.\n  Ed Boyden - Rules for How to Think Managing brain resources in an age of complexity.\n Synthesize new ideas constantly. Learn how to learn (rapidly). Work backward from your goal. Always have a long-term plan. Make contingency maps. Collaborate. Make your mistakes quickly. Write up best-practices protocols. Document everything obsessively. Keep it simple.  There are few mental models, which also help to think systematically especially decision making, problem solving etc. In the next article, I\u0026rsquo;ll write a brief on this.\nJoin my email list to get direct access to new blog posts.\n ","href":"/writing/2021-09-25-how-to-think-part-2/","title":"How to Think? Part-II"},{"content":"","href":"/tags/wisdom/","title":"wisdom"},{"content":"How to negotiate from blog by Sriram Krishnan.\nYou’ve done well in the interview. Now you have the recruiter calling you and reading out some numbers for you. What do you do? Here are some tips I give people.\n Always negotiate! The system expects you to. You’ll never be dinged for it as long as you do it right. Also - negotiating when you get hired is 10x easier than negotiating after you start as an employee. Always negotiate in good faith. Never be deceptive. Never be rude or ghost. It’s just good karma and how you negotiate is a proxy for how you handle yourself at work (goes both ways - a company that is a deceptive negotiator might be deceptive in other ways) Take your time. Recruiters might say “You need to accept this in 24 hours”. In my experience, if a company thinks you’re a valuable hire, they’ll still think that in a few days. Don’t get pressured into a response Do your homework. Know your market price. Do your research on similar titles/roles and also what other peers at the company are paid. You need a sense of what the company typically offers for these roles and what their framework is (RSUs vs cash, titles, etc). This is key - don’t make a negotiation about “I want X, you’re offering less X” Negotiations are easier when you make it a package. Any offer has components - title, sign-on, base pay, RSUs. Offer them options on each. Gives each side leeway to get creative. Communicate what is important to you. Some folks want cash. Some folks want the title bump. Whatever it is, give the recruiter your framework (see #2 about not being deceptive). Give them multiple options. Know your BATNA. Do you have alternate offers on hand? What does your current company pay you? Arm the recruiter with all the info so they know what your options are. Again, dont be deceptive. If you lie, you’ll instantly get caught out as a person of low integrity. nother key: All through the process, reinforce how much you care about this role (and hopefully you genuinely do). It’s easiest when the recruiter hears “I can’t wait to kill it at this role, i just need this offer to work”. Enthusiasm and passion solves many a negotiation. Your (genuine) passion also helps them sell it to other internal stake holders - comp committees, your hiring manager. People will rally for you if they feel you want to work with them. I advise people to negotiate with the recruiter and not their future manager. Sometimes these get tricky and it can taint a key relationship before it gets started. Recruiters do this 10x a day and know how the game works, managers often don’t. Gently push back if the recruiter says “Titles don’t matter here” or “Reporting structure doesn’t work”. If that were really true, they wouldn’t care about making your offer work. On the other hand, in my experience, they rarely matter over long run. Finally, give yourself and the recruiter a timeline. A week is about the maximum this should go on for. Any longer and I find the process grows cold.  That’s it. Always negotiate, always act with high integrity, give them options and always show your passion. And you’ll surprise yourself with what can happen!\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-09-12-how-to-negotiate/","title":"How To Negotiate"},{"content":"Few interview tips for interviewer from blog by Sriram Krishnan.\nThe macro point here is making the process as pleasant and fun as possible. It is unnatural to sit in a room being judged by another human so anything we can do to make it easier goes a long way.\n  Show up on time.\n  No calls/messaging/phone usage or side-conversations during an interview unless an absolute emergency.\n  Always ask about restroom/food/drink right at the beginning and the end.\n  Don’t type out notes/feedback during the interview. You can remember them in your head.\n  Don’t carry a printed version of that person’s LinkedIn profile or resume. Makes them feel judged and makes you look unprepared.\n  Always hand them off to the next person/recruiter in person. Don’t abandon them in a room.\n  Watch the clock - always have at least 10 minutes for questions (or better - do them in the beginning). If they don’t have questions off the top of their head, I try and prompt them with something like “Anything about what you’ve seen about Facebook/Snap/etc today surprise you?”\n  Prep with the other interviewers to not repeat questions. Bonus points if you avoid repeating themes.\n  Some interviewers believe in stressing interviewees to see “how they act under pressure.” I can’t disagree with this tactic enough. I find it both unprofessional and not predictive of how people really act under pressure.\n  My personal bias is to try and make interviews symmetric - for example, if I ask someone for their background/story, I then follow up with my background/story. If I ask them how they think about a problem, I then talk about how I would think about it. It makes it more of a conversation and less Q\u0026amp;A.\n  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-09-11-tips-for-interviewer/","title":"Less-known interview tips for interviewer"},{"content":"Regret Minimization Framework by Jeff Bezos, CEO of Amazon\nWhen you are facing a big potential change in life, such as switching jobs, starting a café, or moving to another place, don’t just look at all the small details. These details can come later. Instead, start by asking yourself: On my deathbed, will I regret not taking this chance?\nTo some, this might sound a bit morbid, but for me, it works. Therefore, next time you face a big decision, also ask yourself “As I get older, will I regret not doing this?“. If the answer is Yes, then you should probably do this.\nIt was Jeff Bezos, CEO of Amazon and one of the world’s richest people, who made the Regret Minimization Framework popular. Here is a 2:38-minute clip of Jeff 10 years ago:\n  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-08-24-regret-minimization-framework/","title":"Regret Minimization Framework"},{"content":"Network Programmability, which is preferred? SNMP or CLI or Yang Network programmability is directly linked to Software Defined Network (SDN). So, it is driven by real benefits like time and cost savings, reduction of human error, customization and innovation. The network programmability is now understood as a set of tools and best practices to deploy, manage and troubleshoot network device, but it\u0026rsquo;s way beyond that.\nNetwork programmability is not new. From the screen scrapping, to bash and expect scripts. Those are part of the automation, try to reduce as much as human error. But what is new? The scale of network is grown exponentially and glowing every day. The agile nature and dynamic requirements of our network infrastructure cannot be realistically configured and managed one device at a time. Each vendor has defined and exposed API to handle their devices programmatically, specially repetitive and mundane tasks. Along with Zero Touch Provisioning (ZTP), a device can be brought up without the human intervention. Except the physical connection, rest of the reconfigurations are managed by SDN controller for the entire network.\nIn the modern internet era, the scale of the deployment is huge. Expectation of DevOps is to get the entire testing and development environments to be built and destroyed within minutes. The network should be flexible enough to adapt the new changes dynamically.\nYang vs. Other Approaches CLI scripting was the primary approach to making automated configuration changes to the network prior to Yang. CLI scripting has several limitations, including lack of transaction management, no structured error management, and ever-changing structure and syntax of commands that makes scripts fragile and costly to maintain. The CLI was designed to use by human; we used for automation, but not for programmatic use-case.\nSNMP is another approach, but, in practice, is mostly used for performance and monitoring applications. Reasons for this include the lack of a defined discovery process that makes it hard to find the correct MIB modules, limitations inherent in using the UDP protocol, and the lack of useful standard security and commit mechanisms.\nIndustry consortiums, like IETF, ONF, TIP, operator engagements, like OpenConfig, OpenRoadm etc are active working with vendors to support Yang as day-one feature. This is also important for product vendors to implement and release programmability support from the beginning of the product release itself.\nJoin my email list to get direct access to new blog posts.\n ","href":"/writing/2021-08-22-network_programmability_snmp_or_cli_or_yang/","title":"Network Programmability, which is preferred? SNMP or CLI or Yang"},{"content":"Wisdom from Poor Charlie’s Almanack by Charlie Munger.\n  “Mimicking the herd invited regression to the mean.” If you do the same things as all the others, you cannot expect different results. Common plagues privately and professionally are status anxiety, social proof tendency, and the keeping-up-with-the-Joneses syndrome – doing what we can to be like the rest. It is not until you stop doing this, and instead find a unique way for yourself, that you will see other results. Stop caring so much about what others think. Really.\n  “Spend each day trying to be a little wiser than when you woke up.” This goes back to the compound effect – if you advance as little as 1% in an area each day, you have improved dramatically in just a few years. This applies to everything.\n  “But if you try to succeed in what you’re worst at, you’re going to have a very lousy career.” This is a typical disease that hits us when we are children and go to school. All children have different strengths that could be developed a lot if nurtured correctly. But all too often we are expected to shine in everything from math to sports and lyrics. Yes, a solid foundation in all subjects is good, but this idea of trying to even everything out can hurt your development as an adult. Therefore, find out what your true strengths are and then nourish them. Spend your time and energy going as far as you can thanks to your strengths, instead of evening out your weaker areas.\n  “It’s not bringing in the new ideas that’s so hard. It’s getting rid of the old ones.” This is a quote from Keynes and it still rings true. Just look at most of the change management writing – it nearly always focuses on how to bring new things to the table and have people accept them. But where are all the ideas and methods to help people get rid of old ways of working and understanding the world?\n  The Tolstoy effect: People will forever blame their upbringing, parents, schooling, spouses, you name it, for their bad luck and misfortune. It has been proven over and over and is especially true today where there are ample chances to lead a good life, that your goals and determination can become much stronger than your previous life. Self-pity is a very sad mental state, and we should change it to something a lot better.\n  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-08-21-quotes-charlie-munger-almanack/","title":"Wisdom by Charlie Munger"},{"content":"","href":"/tags/clos/","title":"clos"},{"content":"Table of contents  Blocking Network Non-Blocking Network Two Stage Non-Blocking Network Three Stage Non-Blocking Network Clos Network 5 Stage Clos Network FAT-Tree  In new era of internet, more applications are moving to cloud. Even for the standalone application, the central processing is done in cloud. Most of the cloud companies developed NextGen datacentre with CLOS architecture. This article is to demystify the Clos architecture.\nThe Clos grows in a very consistent way, thanks to having what\u0026rsquo;s called a scale-out architecture. You increase the amount of work supported by the network by adding more leaves and servers. In contrast, the traditional access-agg-core architecture, the scaling of the services are provided by beefing up the aggregation of box\u0026rsquo;s CPUs.\nThe clos network looks like this.\n https://en.wikipedia.org/wiki/Multistage_interconnection_networks#Clos_network\nBefore going deep into this, we need to understand few terminologies on connections.\nBlocking Network Let\u0026rsquo;s say we have A and B as source connected via a single path to destinations C and D. If A is already using the path to talk to C and at the same time if B wants to talk to D, it cannot because there is no free path available from B to D. This is an example of Blocking Network.\nNon-Blocking Network Now if we add another path between Input and Output switches, then B can talk to D at the same time as there is another Path available to route it\u0026rsquo;s request. This is an example of a Non-Blocking Network.\n https://en.wikipedia.org/wiki/Multistage_interconnection_networks#Multistage_Interconnect_Network\nTwo Stage Non-Blocking Network In this two stage 2x2 switch connection, if A is already connected to E, then B is blocked to reach F.\nFig-1\nIf we add more paths like below, we\u0026rsquo;ll get non-blocking network. But, the Crosspoint complexity will be worser than crossbar crosspoint complexity.\nNote: crossbar Crosspoint complexity is n^2, where for two stage non-blocking network Crosspoint complexity is is (r x n x m) (n is the number of inputs, m is the number of outputs and r is the number of input switches).\nFig-2\nThree Stage Non-Blocking Network Now, with the introduction of middle staging of two 2x2 switches in Fig-1, B will be able to connect to F.\nFig-3\nThis is the idea of Charles Clos.\nWhat Clos showed that with a 3 stage network, one can build a strictly Non-Blocking network with Crosspoint complexity of which is better than O(N^2). Clos Network A Clos network uses 3 stages to switch from N inputs to N outputs. In the first stage, there are r= N/n crossbar switches and each switch is of size n*m. In the second stage there are m switches of size r*r and finally the last stage is mirror of first stage with r switches of size m*n.\nFig-4\nWith the above structure in mind, Clos showed that one can build a strictly Non-Blocking network if we satisfy the inequality\nm \u0026gt;= 2n-1.\nThe number of connections is much less than that of a crossbar network.\n5 Stage Clos Network Let\u0026rsquo;s construct a 5 stage clos network. The fig-3, which is 3 stage clos network, is enhanced by adding new 2 switches each for stage 1 and stage 3 layers. The network will be like below(Fig-5).\nFig-5\nThe middle switch in Fig-5 can be decomposed like Fig-6 with 3 stage clos with 2x2 switches.\nFig-6\nSo, after replacing two middle switches in Fig-5 with Fig-6 network, it will be a 5 stage clos network with 2x2 switch like below (Fig-7).\nFig-7\nFAT-Tree Fat-Trees were originally introduced by Charles Leiserson in 1985. The basic idea is to keep larger bandwidth (with additional links) towards the root. A Fat-Tree is generally represented by FT(k,n) where k is the radix of the switch and \u0026ldquo;n\u0026rdquo; is the levels of the Fat-Tree.\n[Ref: https://en.wikipedia.org/wiki/Fat_tree]\nNow, lets construct the fat-tree from clos network (fig-5). This topology is known by various terms like Folded Clos, Spine and Leaf or 3 stage clos network.\nNow lets make the 5 stage clos network like Fat-tree from Fig-7.\nFormally, we can say it\u0026rsquo;s FT(4,3) as the radix of the switches are 4 and it has 3 levels.\nCalculation:\nAssuming a switch has \u0026ldquo;k\u0026rdquo; ports and the number of Levels is \u0026ldquo;L\u0026rdquo;, then the first column in the below table gives you the generalize way to calculate various parameters. Next three columns, shows various numbers for 2,3 and 4 levels.\nIn the next articles, will try to deconstruct the linkedin and facebook datacenter architecture.\nReference:\n  https://en.wikipedia.org/wiki/Multistage_interconnection_networks\n  A Scalable, Commodity Data Center Network Architecture\n  https://engineering.linkedin.com/blog/2016/03/the-linkedin-data-center-100g-transformation\n  Facebook DataCenter Architecture\n  Join my email list to get direct access to new blog posts.\n ","href":"/writing/2021-08-15-clos_networks/","title":"Clos Networks"},{"content":"This is indeed good information by Camille Fournier blog post.\nFor varying levels of seniority, from senior, to staff, and beyond.\n How to run a meeting, and no, being the person who talks the most in the meeting is not the same thing as running it How to write a design doc, take feedback, and drive it to resolution, in a reasonable period of time How to mentor an early-career teammate, a mid-career engineer, a new manager who needs technical advice How to indulge a senior manager who wants to talk about technical stuff that they don’t really understand, without rolling your eyes or making them feel stupid How to explain a technical concept behind closed doors to a senior person too embarrassed to openly admit that they don’t understand it How to influence another team to use your solution instead of writing their own How to get another engineer to do something for you by asking for help in a way that makes them feel appreciated How to lead a project even though you don’t manage any of the people working on the project How to get other engineers to listen to your ideas without making them feel threatened How to listen to other engineers’ ideas without feeling threatened How to give up your baby, that project that you built into something great, so you can do something else How to teach another engineer to care about that thing you really care about (operations, correctness, testing, code quality, performance, simplicity, etc) How to communicate project status to stakeholders How to convince management that they need to invest in a non-trivial technical project How to build software while delivering incremental value in the process How to craft a project proposal, socialize it, and get buy-in to execute it How to repeat yourself enough that people start to listen How to pick your battles How to help someone get promoted How to get information about what’s really happening (how to gossip, how to network) How to find interesting work on your own, instead of waiting for someone to bring it to you How to tell someone they’re wrong without making them feel ashamed How to take negative feedback gracefully  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-08-03-incomplete-list-skills-for-senior-engineers/","title":"An incomplete list of skills senior engineers need, beyond coding"},{"content":"","href":"/tags/skills/","title":"skills"},{"content":"Charlie Muner once said:\nYou have to figure out what your own aptitudes are. If you play games where other people have the aptitudes and you don’t, you’re going to lose. And that’s as close to certain as any prediction that you can make. You have to figure out where you’ve got an edge. And you’ve got to play within your own circle of competence.\nIf you want to be the best tennis player in the world, you may start out trying and soon find out that it’s hopeless—that other people blow right by you. However, if you want to become the best plumbing contractor in Bemidji, that is probably doable by two-thirds of you. It takes a will. It takes the intelligence. But after a while, you’d gradually know all about the plumbing business in Bemidji and master the art. That is an attainable objective, given enough discipline. And people who could never win a chess tournament or stand in center court in a respectable tennis tournament can rise quite high in life by slowly developing a circle of competence—which results partly from what they were born with and partly from what they slowly develop through work.\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-07-23-circle-of-competence/","title":"Circle of Competence"},{"content":"At 31 years old, Charlie Munger was divorced, broke, and burying his 9 year old son, who had died from cancer. By the time he was 69 years old, he had become one of the richest 400 people in the world, been married to his second wife for 35+ years, had eight wonderful children, countless grandchildren, and become one of the most respected business thinkers in history. He eventually achieved his dream of having a lot of money, a house full of books, and a huge family. But that doesn’t mean he didn’t face unbelievable challenges and tragedies.\nIn 1949, Charlie Munger was 25 years old. He was hired at the law firm of Wright \u0026amp; Garrett for $3,300 per year, or $29,851 in inflation-adjusted dollars as of 2010. He had $1,500 in savings, equal to $13,570 now.\nA few years later, in 1953, Charlie was 29 years old when he and his wife divorced. He had been married since he was 21. Charlie lost everything in the divorce, his wife keeping the family home in South Pasadena. Munger moved into “dreadful” conditions at the University Club and drove a terrible yellow Pontiac, which his children said had a horrible paint job. According to the biography written by Janet Lowe, Molly Munger asked her father, “Daddy, this car is just awful, a mess. Why do you drive it?” The broke Munger replied: “To discourage gold diggers.”\nShortly after the divorce, Charlie learned that his son, Teddy, had leukemia. In those days, there was no health insurance, you just paid everything out of pocket and the death rate was near 100% since there was nothing doctors could do. Rick Guerin, Charlie’s friend, said Munger would go into the hospital, hold his young son, and then walk the streets of Pasadena crying.\nOne year after the diagnosis, in 1955, Teddy Munger died. Charlie was 31 years old, divorced, broke, and burying his 9 year old son. Later in life, he faced a horrific operation that left him blind in one eye with pain so terrible that he eventually had his eye removed.\nIt’s a fair bet that your present troubles pale in comparison. Whatever it is, get over it. Start over. He did it. You can, too. It is The Cinderella Principle.\nReference: Link\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-07-23-the-cindrella-principle/","title":"The Cindrella Principle"},{"content":"Entrepreneur Colin Dowling on sales, via HN:\n  Sales is a lot like golf. You can make it so complicated as to be impossible or you can simply walk up and hit the ball. I\u0026rsquo;ve been leading and building sales orgs for almost 20 years and my advice is to walk up and hit the ball.\n  Sales is about people and it\u0026rsquo;s about problem solving. It is not about solutions or technology or chemicals or lines of code or artichokes. It\u0026rsquo;s about people and it\u0026rsquo;s about solving problems.\n  People buy 4 things and 4 things only. Ever. Those 4 things are time, money, sex, and approval/peace of mind. If you try selling something other than those 4 things you will fail.\n  People buy aspirin always. They buy vitamins only occassionally and at unpredictable times. Sell aspirin.\n  I say in every talk I give: \u0026ldquo;all things being equal people buy from their friends. So make everything else equal then go make a lot of friends.\u0026rdquo;\n  Being valuable and useful is all you ever need to do to sell things. Help people out. Send interesting posts. Write birthday cards. Record videos sharing your ideas for growing their business. Introduce people who would benefit from knowing each other then get out of the way, expecting nothing in return. Do this consistently and authentically and people will find ways to give you money. I promise.\n  No one cares about your quota, your payroll, your opex, your burn rate, etc. No one. They care about the problem you are solving for them. There is more than 100 trillion dollars in the global economy just waiting for you to breathe it in. Good luck.\n  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2021-07-18-how-to-get-good-at-sales/","title":"How to be good at sales?"},{"content":"","href":"/tags/forwarding/","title":"forwarding"},{"content":"","href":"/tags/routing/","title":"routing"},{"content":"Table of contents  Bridging and Routing L2 Forwarding L3 Forwarding VRF Overlays  1. IP in IP 2. GRE 3. VXLAN   Segment Routing Forwarding in NIC  The core routing and packet forwarding haven\u0026rsquo;t changed for decades and it is not going to change for next decade also. But, it is going to evolve due to market needs, specially data centres. At the same time, Silicon capacity, CPU power, NIC bandwidth, all have increased significantly. Applications have evolved from monoliths to multi-tiered applications, using distributed databases with distributed microservices, creating a lot more demand for East-West network capacity and, more importantly, network services. Typically, the East-West traffic is 80 percent of overall traffic till today. Till now, various number of IP routing and forwarding techniques have been deployed in Data Center and Internet Service Provider.\nBridging and Routing The Ethernet is only surviving technology at Layer 2, defined by IEEE 802.1. The packet forwarding technique at layer 2 is called Bridging, also called as Layer 2 forwarding. On the other hand, IP is only surviving technology at Layer 3, defined by IETF. The technique it uses to forward packets is called IP Routing/IP Forwarding/L3 Forwarding.\nL2 Forwarding The Ethernet packets have a straightforward structure that contains six fields: destination MAC address, source MAC address, 802.1Q tag, Ethertype (protocol inside the data field), data, and frame check sequence (FCS). The 802.1Q tag contains the VLAN identifier (VID) and the priority. Of these fields, the only ones used in L2 forwarding are the VID and the destination MAC address. These two are used as a key to search a MAC address table with an exact match technique. If the key is found, the table entry indicates where to forward the frame. If the key is missing, the frame is flooded to all the ports (except the incoming port) in an attempt to make the maximum effort to deliver the frame to its final destination. To avoid loops, spanning tree protocol is used.\nL3 Forwarding Layer 3 forwarding is different from L2 forwarding: if a packet needs to be sent across subnets, the destination IP address is searched in an IP routing table using a longest prefix match (LPM) technique.\n 100.1.0.0/16 \u0026ndash; port 1 100.2.0.0/16 \u0026ndash; port 2 100.1.1.0/24 \u0026ndash; port 3\n The /n indicates that only the first n bits from the left are significant in any matching.\nIf the LPM does not find a match in the forwarding table for the IP destination address, the packet is dropped. In L3 forwarding, time to live (TTL) is used to avoid temporary loops.\nLPM can be done in software using a variety of data structures and algorithms. Linux uses a level-compressed trie (or LPC-trie) for IPv4, providing good performance with low memory usage. For IPv6, Linux uses a more traditional Patricia trie. LPM forwarding in HW is the most common implementation of layer 3 forwarding. There are a few different ways to accomplish LPM in hardware. All of them require performing a \u0026ldquo;ternary match\u0026rdquo;; that is, a match where some of the bits are \u0026ldquo;don\u0026rsquo;t care\u0026rdquo; (represented by the letter \u0026ldquo;X\u0026rdquo;). For example, the route 10.1.1.0/24 is encoded as 00001010 00000001 00000001 XXXXXXX.\nFor example, some commercial routers use a microcode implementation of Patricia trie. Others use a hardware structure called ternary content-addressable memory (TCAM) that supports ternary matches. Based on the scale requirements, TCAMs can take up significant silicon space and have high power consumption.\nVRF Virtual routing and forwarding (VRF) is a layer 3 network virtualization technology that permits multiple instances of a routing table to exist in a router and work simultaneously. This allows different kinds of traffic to be forwarded according to different routing tables. Each routing instance is independent of the others, thus supporting overlapping IP addresses without creating conflicts.\nIn VRF, each router participates in the virtual routing environment in a peer-based fashion; that is, each router selects the routing table according to some local criteria, the most common being the incoming interface (either physical or logical). The other options are VLAN ID or an MPLS label.\nOverlays An overlay network is a virtual network built on top of an underlay network; that is, a physical infrastructure. The underlay network\u0026rsquo;s primary responsibility is forwarding the overlay encapsulated packets (for example, VXLAN) across the underlay network in an efficient way using ECMP when available. The underlay provides a service to the overlay. In modern network designs, the underlay network is always an IP network (either IPv4 or IPv6), Example: MPLS, GRE, IP in IP, L2TP, and VXLAN. Normally, the encapsulation and decapsulation needs to be done in HW for better performance.\n1. IP in IP One of the first standards that deals with encapsulation of IPv4 in IPv4 is RFC 1853. Similarly IPv4 in IPv6, IPv6 in IPv4.\n2. GRE The goal was to be able to encapsulate a wide variety of network layer protocols inside virtual point-to-point links over an IP network. Although nowadays this feature is less relevant because the only surviving protocols are IPv4 and IPv6, it is still important, because with virtualization there is a need to carry layer 2 traffic inside a tunnel. Efforts such as Network Virtualization using Generic Routing Encapsulation (NVGRE/rfc7637) and L2 GRE try to satisfy this virtualization requirement.\n3. VXLAN VXLAN carries a VLAN across a routed network. It propagates l2 packets/domain over L3 network. This is required in Clos based datacentre network. Although VLANs have historically been associated with the spanning tree protocol, which provides a single path across a network, VXLAN can use the equal cost multi-path (ECMP) of the underlying network to offer more bandwidth.\nThe VXLAN standard is defined in RFC 7348 and the authors' list, showing that it is a concerted effort among router, NIC, and virtualization companies, indicating the strategic importance of this overlay.\nVXLAN uses UDP encapsulation, and the destination UDP port is set to the well-known value of 4789. The source UDP port should be randomly set, creating entropy that can be used by routers to load balance the traffic among multiple parallel links.\nIn general, the encapsulating endpoint may set the UDP source port to a hash of the five-tuple of the inner IP header. In this way, all the packets belonging to a single flow will follow the same path, preventing out-of-order packets, but different flows may follow different paths. VXLAN is also used as a technology for encapsulating layer 3 unicast communication between application layers; this is evident in the newer revision of the VXLAN specification that allows for IP encapsulation within VXLAN natively. Finally, VXLAN encapsulation adds a Virtual Network ID (VNID) to the original L2 frame, a concept similar to a VLAN-ID, but with a much broader range of values, because the VNID field is 24 bits, compared to the VLAN-ID field that is only 12 bits.\nThe VXLAN encapsulation adds 50 bytes to the original layer 2 Ethernet frame, which needs to be considered in the context of the network underlay;\nSegment Routing Source routing is a technology known for decades in which the sender of the packet decides the path the packet should take to its destination. Segment routing (SR) is a form of source routing where the source node defines the forwarding path as an ordered list of \u0026ldquo;segments.\u0026rdquo; There are two kinds of Segment Routing:\n SR-MPLS, which is based on Multiprotocol Label Switching (MPLS) SRv6, which is based on IPv6  The underlying technology used by SR-MPLS is Multiprotocol Label Switching (MPLS), a routing technique that directs data from one node to the next based on \u0026ldquo;labels\u0026rdquo; rather than network addresses. Alternatively, SR can use an IPv6 data plane, as is the case in SRv6.\nSegment routing divides the network into \u0026ldquo;segments\u0026rdquo; where each node and link could be assigned a segment identifier, or a SID, which is advertised by each node using extensions to standard routing protocols like IS-IS, OSPF and BGP, eliminating the need to run additional label distribution protocols such as MPLS LDP.\nSR imposes no changes to the MPLS data plane. In SR the ordered list of segments is encoded as a stack of labels. The first segment to process is on the top of the stack. Upon completion of a segment processing, the segment is removed from the stack.\nFor example, in the absence of SR the routing between the Source and the Destination in is composed of two ECMPs: A - D - F - G and A - D - E - G (assuming all links have the same cost). In the presence of SR it is possible to forward the packet across other links. For example, if the source specifies a stack E/C/A, where A is the top of the stack, the packet is forwarded to A that pops its label, resulting in a stack containing E/C. Then A sends the packet to C, C will pop its label and forward the packet to E, which delivers it to its destination.\nSegment routing offers the following benefits:\n Network slicing, a type of virtual networking architecture with the ability to express a forwarding policy to meet a specific application SLA (for example, latency, bandwidth) Traffic engineering  Capability to define separate paths for disjoint services Better utilization of the installed infrastructure Stateless service chaining End-to-end policies Compatibility with IP and SDN    Forwarding in NIC This is very new concept, adopted in cloud providers. The cloud server consist of large number of tenants, compromising large number routes and access control lists (ACL). Sometimes, this is difficult to implement this in host with traditional table lookups. Hence, some cloud providers decided to implement limited forwarding functionally in NIC. This is kind of flow based entries in NIC. The flow supports ipv4/ipv6 address, policy, filrewalls etc. With the advancement of more technologies with ipv6 addressing, it will be a challenge to maintain both features and cost. More complicated the features will be, bigger silicon and more power will be needed and cost will increase. This is one of the future trend gearing up for cloud data centers. This approach is implemented in Microsoft Azure.\nJoin my email list to get direct access to new blog posts.\n ","href":"/writing/2021-05-30-various_routing_packet_forwarding_techniques/","title":"Various Routing \u0026 Packet Forwarding Techniques"},{"content":"Table of contents  Do the right thing Do the right way Prioritize Organize Routine Goal Love what you do Recreation Positive thinking \u0026amp; attitude Right Values  Productivity concept is always there in my mind, but never thought so deeply. Until recently, my friend Biplab asked me the questions:\n\u0026ldquo;How do you feel at the end of a hard day? Do you feel satisfied, fulfilled, or disappointed? Are you productive?\u0026rdquo;\n\u0026ldquo;may be yes!\u0026quot;\u0026ndash;I said with a deep sigh.\nIn general, when I think about productivity, it comes to our mind about industrial productivity, the input vs output. This is there for ages. But as human beings, living in the modern world, we should also think about our productivity. We have a limited amount of time in a day/life we should also achieve our desired productivity. We are living in a fast and advanced world, we should improve our productivity in the advanced world, we can leverage the technology in our progress.\nDoes productivity apply to only working people? No. The next question, how can productivity be judged? Here, it can be loosely tied to individual goals. It should be better to come out of our comfort zone and achieve a little more towards individual goals. To give an example, \u0026quot;A bodybuilder is not born bodybuilder\u0026quot;. He needs to work on his goal to become a bodybuilder slowly.\nIn society, there are working people, like doctors, engineers, lawyers, industrial workers, office workers, bus drivers/conductors, farmers, etc. They need to produce their output based on their job profile. Here, I am not talking about just the output of whatever they need to produce based on their work assigned. How much better are they doing? They should try to improve everyday so that the remaining time, they can use for their betterment of life in terms of personal and professional improvement.\nIn society, there are other kinds of people, homemakers. Especially in developing and underdeveloped countries, the percentage of homemakers is more. They also try to improve their productivity to a great extent. In everybody's life there is a good portion of necessary work, which cannot be neglected. Other than that, there are some tasks which can be optimised and improvised, so that it can help to get some extra amount of time, which can be used for a greater cause.\nIn Asian countries, 75% of women are homemakers. Aren\u0026rsquo;t they organized? Absolutely, they are. Managing household chores, managing kids, helping husband/partners, etc. Some of them are doing office work, helpers as well. On a working day, we have specified time to do work. but for homemakers, they don\u0026rsquo;t have defined time to do their work. They are always on. One of the challenging tasks about homemaking is feeling like we are never entirely done. It\u0026rsquo;s the same for the people who work outside of home too, they have many tasks on top of the current task they do. That\u0026rsquo;s the reason to create a to-do list. This is the accountability matrix of tasks in hand.\nWhile writing this article, I was talking to my neighbour, who is a homemaker. I asked, \u0026ldquo;How is your schedule, how productive are you?\u0026rdquo; She said, \u0026quot;Full day, I am busy cooking, preparing children for school, basic house chores and then picking them from school, helping them study.\u0026quot;\nShe was trying to explain the bunch of work she does. Then I asked her to explain the start time. As far as I know, school has a fixed time. When she explains to me the details of the schedule for a weekday. She does a lot of ads hoc work, which can be planned properly, like breakfast for the kids, that can be done in one go for all the family members, instead of just at a time for one. Life should not be spent only on household chores. We should be doing these things to get them out of our way, so that we can go on doing things which we like to do and more enjoyable. Like reading books, talking to friends, cherishing life, old memories, playing with kids, taking a walk, exercising, holidaying,\nThere are many categories to consider improving productivity\n1. Do the right thing Here, I'll take the perspective of working professionals who are appointed to a job. Working more hours, over 8 hrs in a day, makes you more productive? You might add more value, you are not more productive, but you can enjoy more value created in this extra time.\nYou have a limited amount of time allocated in a day. You can add extra hours for a period of some time, maybe a few months. I have seen people adding extra time to achieve their extra goal. This includes me. While doing my M.Tech along with my job. I was doing extra time to finish the pending study and assignment at the end of each semester. But you cannot continue doing so in the long run. It has a detrimental effect, you might add more mistakes, overloading your working memory, more stress, etc. In the long run, your productivity will decrease. You may not be successful by just adding extra time to your work. we must work smarter than harder.\nI want to introduce a term here - deep work. The time you work, it should be focused work, no fooling around. To increase your efficiency, it should be focused work.\n2. Do the right way By now, you know what is needed for you/work. Next you should decide what is required to achieve the work, instead of spending time in hours for the task, how to do. Sometimes we need to acquire or brush up the skills before jumping into the work.\nIf an athlete decides to join a marathon, he cannot start running the next day. He needs to gain knowledge about running technique, frequency, and food. Sometimes, he needs to hire a coach to guide him through the course.\nWe all need to focus on the right strategy with a long-term view in mind with the right goals. I know this is not always easy, but we must try to sit down and think on this instead of going in the flow.\nThe above activities are crucial for us to decide what is needed. But life consists of many right things to achieve in the right way. Again, the priority needs to be decided. I feel there are a few more activities that need to be done as well.\n1. Prioritize There are two ways, prioritize tasks for the day and long term. In the long term - I like to mention that as a goal.\nIn a day, we have 24 hrs, but we cannot always be productive. Right after the sleep, in the morning, everybody has more energy to concentrate on work. This will be reduced as the day passes by. I prefer to follow the table below for my work priorities.\nAll your important tasks must be finished early in the day while your body has full energy even if the task takes longer. But I used to follow the contrary, my favourite thing first. Sometimes, it used to be an important task, but not always. Not finishing important tasks will add more pressure slowly. It will create a negative outlook.\n2. Organize Let\u0026rsquo;s go to a stationery shop or cloth store, shoe store, any other departmental store. \u0026ldquo;Why are they organized?\u0026quot; Yes, to maximize space, easy to find structure. The storekeeper doesn\u0026rsquo;t need to use his brain to remember the location. In our life also, organization is important. The human brain should not be used for this structural work. Instead, the brain power should be used to memorise, to innovate, to be creative, to improve life. Ideally, our tasks should be organized in a structured way to make the system clutter free, stress free.\nThe point is if tasks are not organized, twice or thrice more effort is required to do the same task. So, don\u0026rsquo;t fall into this under-achiever category. Sometimes, it just needs very minimal effort to make things organised. This is just a small habit change. Over a period, it will automatically be organised.\n3. Routine In day-to-day life, many activities are set as a routine. Like getting up from bed, breakfast, starting with the office, lunch, dinner, to go to bed. This is a common routine for all of us. Along with that, based on job profile, everyone has their prescribed work routine. Again, prioritization is needed on the routine. There is a need to build a system with a flexible framework. In the system, the most important work should be at the beginning of the day, when you have high energy.\nDo you remember the story, \u0026ldquo;Putting stone and sand in a jar\u0026rdquo;? To make the most out of the day, stone should be dropped first in the jar and then sand.\nAll the activities are like a habit. Don\u0026rsquo;t believe in will power, instead build a small habit. Very few lucky people can get something from the will power. The habit is like a system for you. Like, if anyone decides to go to gym, every day at 7am, start to go to gym for 15 mins. Don\u0026rsquo;t use your brain here, just go every morning. Automatically, this will become part of your routine.\n4. Goal Everyone has their own day-to-day life. Do you want to live the same life three years from now?\nIf not, you have to set a goal for yourself and you have to define steps for it. The day, today, tomorrow, is not an isolated component of our life, of the goals. Hence, one should know the art of mastering the day as a productive one. There is a definition of weekday and weekend. Both are equally important in our life. The weekend needed to regain the energy for the coming week. So, weekends need to be enjoyed as a productive one. Don\u0026rsquo;t be frightened to think about the future, instead one must define his goal and plan it accordingly as small as possible towards a bigger goal.\nYou are reading this article, because you want to excel in your life. So, Though I had a bunch of goals and lists planned, none of them would ever see the light of the day if I changed nothing and continued to live my days exactly as I do them now.\n5. Love what you do If you love what you create, this will create enormous peace of mind. If you love, your passion will follow. You will keep innovating. In this technology driven world, if you want to achieve your goal, make use of technology in your favour for your bigger goal. One might get setbacks. The key is to turn those setbacks into success by focusing on constant and strategic innovation. How can the approach be refined? How can one change what he is doing to more swiftly meet the goal? Mistakes are normal in human life. When can you learn from your mistakes without punishing yourself and take the courage to proceed towards a life where you love what you do, then you will overcome all the odds and become a strong human being?\n6. Recreation I think we always want to do more in a short time. This is human psychology. But study reveals that if you take a short break in-between, productivity improves. So, we should make time for leisure. Don\u0026rsquo;t let your work sacrifice your family, find a balance between work and leisure. Sometimes, it's good to take short holidays to rejuvenate yourself.\nOne of my favourite short relaxations exercises is to breathe in deeply, count one-\u0026gt;ten slowly, and then exhale, doing the same for 5 mins. In fact, this is also one of the sleep exercises. Few more techniques one can try, like visualization/daydreaming, listening to music or playing musical instruments, try to keep the mind blank for some time.\nThe productivity is directly linked to routines, goals, prioritization, etc. I feel, few psychological thinking will help as well.\n7. Positive thinking \u0026amp; attitude Positive thinking is a mental attitude which focuses on the good in any situation. It can have a big impact on physical and mental health. Research reveals that this is not just about being happy or displaying an upbeat attitude, this is more, it will create value in our life, it will help to look at the world with a positive outlook. Even, the negative outlook will be accepted in a positive angle. In life, everything is not in our control. We can only control those which are under our influence. We will stop blaming those which are not in our control. Positive thinking has positive benefits in life, better stress management and handling skills, physical well-being, less depression, longer life span. Everybody has lots of abilities, the question comes, how to use those abilities in a positive angle.\nFew years back, I met one psychology trainer, Ranjit Singh, who is specialists for sports. \u0026ldquo;What is your role in sports, how do you contribute to sports activities\u0026rdquo; \u0026ldquo;I have an invisible role, but BIG role. I work on improving their attitude,\u0026rdquo; He said laughingly.\nLater I realised, it\u0026rsquo;s indeed a big role. They help to train the athlete about their attitude. So, a positive attitude is applicable to all of us. This is just a practice and will help us in building physical, mental, social, creative skills.\n8. Right Values I believe the right values are very important in our lives, this will guide and motivate us towards our action, decision, attitude. This must be there in our fundamental belief system. Values are essential to ethics; ethics are connected to human actions and how they behave. The values are learnt in our childhood, we have been taught which is right and wrong. They are very much stable over a period, minimally changed. The right values may not have a direct relation to productivity. But this will help to achieve one\u0026rsquo;s goal with the right attitude.\nLife is fun, at the time it should be organised as well. I think, with the above-mentioned principles, anyone can improve their life, for better, more creative, more expanding. It will help to lead a less stressful, more fun, happier life.\nJoin my email list to get direct access to new blog posts.\n ","href":"/writing/2021-05-15-how_productive_are_you_in_life/","title":"How productive are you in life?"},{"content":"","href":"/tags/productivity/","title":"productivity"},{"content":"Thank you for reading my blog!\nJoin my email list to get direct access to new blog posts.\n PS: I won\u0026rsquo;t spam you. When I send you an email, I promise it will be worth it.\n","href":"/subscribe/","title":"Subscribe"},{"content":"Read enough, and you become a connoisseur. Then you naturally gravitate more toward theory, concepts, nonfiction.\nBest Advices:\n The Day You Became A Better Writer \u0026amp; Second Version by Scott Adams Even though I am a very good writer and I’ve been writing a lot since I was young, I still open up that blog post and put it in the background anytime I’m writing anything important. It’s that good. I use it as my basic template for how to write well. Think about the title, “The Day You Became a Better Writer.” It’s such a powerful title. He teaches you in one small blog post the importance of surprise, the importance of headlines, the importance of being brief and directed, not using some adjectives and adverbs, using active not the passive voice, etc. This one blog post right there will change your writing style forever if you put your ego down and absorb it properly.  Best Twitter Collection:\n On Various Topics  Twitter accounts:\n @AmuseChimp @mmay3r “intellectual compounding” by @Zaoyang).  Newsletters (I have subscribed to)\n Software Lead Weekly by Oren Ellenbogen Level Up by Pat Kua Pointer.io by Suraj Kapoor TLDR Newsletter by Dan Ni Programming Digest, by Jakub Chodounsky  Startup Advice\n Sam Altman Startup Playbook  Talks\n Harari’s Sapiens in lecture/course from on youtube.  Podcasts\n  The Changelog - high-quality conversations with engineers, leaders, innovators in the tech world.\n  DevPath.fm - conversations with industry veterans about their software engineering careers and learnings.\n  Greater Than Code - a podcast with frequent software engineering guests from underrepresented groups. Weekly episodes on the human side of tech.\n  Heavy Networking from Packet Pushers - About data networking. Continuous professional development. Architecture and design, software defined, cloud, routing, switching, security, wireless, campus, enterprise, and more. Technical discussions with vendors about their products, deep dialog with real people who make networks work.\n  Underlay - Exploring the intersection of digital infrastructure and the humans who depend on it.\n  Community Made - Lessons, learnings, and key insights from the world’s most fascinating entrepreneurs\n  PING - Podcast of APNIC\n  Cisco TechBeat - Cisco TechBeat features inspirational guests from around the world that drive innovation\n  Packet Pushers Podcasts - The Packet Pushers Podcast Network\n  The Routing Table Podcast - The Routing Table podcast is hosted by Melchior Aelmans and Rick Mur.\n  North Star Podcast by David Perell - A deep dive into the stories, habits, ideas, strategies and methods that drive fulfilled people and create enormous success for them. They’re guided by purpose, live with intense joy, learn passionately, and see the world with a unique lens. Each episode lets us soak in their hard-earned wisdom and apply it to our lives. Guests include Neil deGrasse Tyson, Seth Godin, and Tyler Cowen.\n  Appendix 1: Collection of Tech Blogs\n github.com/kilimchoi/engineering-blogs tech-blogs.dev uses.tech bloggingfordevs.com  Appendix 2: Online Tech Communities\n reddit.com Hacker news by ycombinator  ","href":"/reading/","title":"Reading"},{"content":"","href":"/archive/","title":"Archive"},{"content":"Charles Darwin’s 8 Steps to Steady-State Learning\n A life-long program of self-study Keeping a diary/journal Scribbling notes immediately Keeping “indexed portfolios” (notes/summaries of what you\u0026rsquo;ve read or heard) Testing beloved concepts – make a note, immediately, if you come across a thought or idea that is contrary to something you currently believe. Absorb it, study it and don\u0026rsquo;t let it go until you conclude that you need to change your mind or if the thought or ideas is wrong Learning lessons by heart Seeking to earn the approval of great men (dead or alive) The humility to seek not fame (as in, wisdom flows into the humble man like water flows into a depression)  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2020-12-20-charles-darwin-8-steps-to-steady-state-learning/","title":"Charles Darwin’s 8 Steps to Steady-State Learning"},{"content":"Table of contents  Why is this important? What do we achieve? Principles  A good code must satisfy few requirements: it must produce correct results, for which it is written. Also, it should be readable and understandable by other developers. It should also follow few code principles. This is your professional responsibility that the code you write will be re-read by many other developers, who want to either understand or modify the code.\nWhy is this important? When the code is not readable, the engineer modifying the code, will spend lot of time to understand the code itself. If it is misunderstood, then they will spend multiple iteration to fix his newly written code. Sometime, it can lead to breaking functionality in somewhere else unintentionally.\nIn another scenario, engineer failing to understand the code, will rewrite the code again, deleting the old code. It has a impact on the overall schedule, customer delivery, most importantly if any corner cases missed, this will lead to more effort. Code should be written to minimize the time it would take for someone else to understand it\nAnother important aspect, incorrect code and unreadable code. The incorrect code will not be able to hide for long time. Unit-test and automation will be able to detect this very quickly unless these are dead code, while unreadable code can exist in system for long time till the time a new engineer modify this code due to bug fix or new enhancement.\nA good codebase - is the foundation of company\u0026rsquo;s growth. a good codebase consists of well tested and readable code. It helps to increase the confidence to engineer. They will be happy to enhance and extend existing codebase to add more features. It helps company to grow more business.\nWhat do we achieve? On the surface, readability may seem subjective. Something which may vary between languages, codebases, and teams. But when you look underneath, there are core elements within all code which make it readable.\nCan you follow and understand (not read) your code? Does your variable\u0026rsquo;s, function\u0026rsquo;s naming convention and functional building blocks follow proper sequence? Are your comments adequate enough for future readers? Are the code style consistent?\nMany programmers are too close to the computer. If the code runs, nothing else matters. Although a common defense it removes all of the human elements from what we do.\nThe readable code starts with you. After you finish your coding, take a break and re-read the code again with a open mind. If you find any shortcomings in your code to make it more descriptive, please add. This will help future readers. In fact, this is a general rule in code review guidelines that another engineer, who is not expert to the codebase, should review the code also. He will look into the code from a fresh perspective. If you and the other developers/reviewers (including the non-expert engineer) are happy with the code and its structures with no open questions, then that is the readable code.\nWe are in the world of agile, faster customer engagement. Non-readable code — It will indirectly impact project schedule and customer delivery. This is one of the contributor of technical debt. Especially in agile methodology, not necessarily, the same engineer will work on the same module for future work, a different engineer should be able to enhance the code without any additional complexity.\nPrinciples Few principles of readable code:\n Well-Tested In my opinion, this is very important. well-tested code can be modified without the fear of breaking any functionality. Without tests, risk will come in future work estimation. Optimization vs Readability, Always write code that is simple to read and which will be understandable for developers. Because time and resources that will be spent on hard readable code will be much higher than what you get from optimization. Still there are use-cases where optimizston are required, then try to make it like independent module with 100% test coverage. Architecture First Writing code, without thinking of its architecture is a bad practice. Well Structured, In any codebase (big or small), well structure code is very easy to understand and browse. Keep It Simple, Don’t write complex code. Make it simpler than more bugs it may have and less time needed to debug them. Thoughtful Naming, Variables, functions, class names will help to understand the code better. This needs little cautious effort from developers to make it happen. You have to make it a practice. Comments, Again this itself explains the need of it. A \u0026lsquo;why\u0026rsquo; comment is good enough. Make sure it is precise and compact. Automation, First and foremost is manual tests. The Automation is needed to make the reduction of effort in long term. If you have the automation ready for your existing code, the effort required to test your existing feature will be very small, only additional testing required for your new functionality.  Join my email list to get direct access to new blog posts.\n ","href":"/writing/2020-11-18-clean-and-readable-code/","title":"Clean and Readable Code"},{"content":"","href":"/tags/readable-code/","title":"readable-code"},{"content":"","href":"/tags/link-state/","title":"link-state"},{"content":"Link-State Protocols on Data-Center Fabrics – Internet Protocol Journal (PDF)\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2020-10-01-link-state-protocols-on-data-center-fabrics-internet-protocol-journal-pdf/","title":"Link-State Protocols on Data-Center Fabrics - Internet Protocol Journal (PDF)"},{"content":"A set of 10 rules as listed in Ed Boyden’s popular blog post in MIT Technology Review, Nov 2007.\nManaging brain resources in an age of complexity.\n  Synthesize new ideas constantly. Never read passively. Annotate, model, think, and synthesize while you read, even when you’re reading what you conceive to be introductory stuff. That way, you will always aim towards understanding things at a resolution fine enough for you to be creative.\n  Learn how to learn (rapidly). One of the most important talents for the 21st century is the ability to learn almost anything instantly, so cultivate this talent. Be able to rapidly prototype ideas. Know how your brain works. (I often need a 20-minute power nap after loading a lot into my brain, followed by half a cup of coffee. Knowing how my brain operates enables me to use it well.)\n  Work backward from your goal. Or else you may never get there. If you work forward, you may invent something profound–or you might not. If you work backward, then you have at least directed your efforts at something important to you.\n  Always have a long-term plan. Even if you change it every day. The act of making the plan alone is worth it. And even if you revise it often, you’re guaranteed to be learning something.\n  Make contingency maps. Draw all the things you need to do on a big piece of paper, and find out which things depend on other things. Then, find the things that are not dependent on anything but have the most dependents, and finish them first.\n  Collaborate.\n  Make your mistakes quickly. You may mess things up on the first try, but do it fast, and then move on. Document what led to the error so that you learn what to recognize, and then move on. Get the mistakes out of the way. As Shakespeare put it, “Our doubts are traitors, and make us lose the good we oft might win, by fearing to attempt.”\n  As you develop skills, write up best-practices protocols. That way, when you return to something you’ve done, you can make it routine. Instinctualize conscious control.\n  Document everything obsessively. If you don’t record it, it may never have an impact on the world. Much of creativity is learning how to see things properly. Most profound scientific discoveries are surprises. But if you don’t document and digest every observation and learn to trust your eyes, then you will not know when you have seen a surprise.\n  Keep it simple. If it looks like something hard to engineer, it probably is. If you can spend two days thinking of ways to make it 10 times simpler, do it. It will work better, be more reliable, and have a bigger impact on the world. And learn, if only to know what has failed before. Remember the old saying, “Six months in the lab can save an afternoon in the library.”\n  Join my email list to get direct access to new blog posts.\n ","href":"/blogs/2020-07-22-how-to-think/","title":"How to Think?"},{"content":"  \u0026ldquo;The less confident you are, the more serious you have to act.\u0026rdquo; – Tara Ploughman  \u0026ldquo;The condition of man is already close to satiety and arrogance, and there is danger of destruction of everything in existence.\u0026rdquo; – a Brahmin to Onesicritus, 327 BC, reported in Strabo\u0026rsquo;s Geography  \u0026ldquo;Change breaks the brittle.\u0026rdquo; – Jan Houtema  The sons of Hermes love to play, And only do their best when they Are told they oughtn\u0026rsquo;t; Apollo\u0026rsquo;s children never shrink From boring jobs but have to think Their work important. – W. H. Auden, Under Which Lyre\n  \u0026ldquo;Programs must be written for people to read, and only incidentally for machines to execute.\u0026rdquo; – Abelson \u0026amp; Sussman, SICP, preface to the first edition\n  \u0026ldquo;That language is an instrument of human reason, and not merely a medium for the expression of thought, is a truth generally admitted.\u0026rdquo; – George Boole, quoted in Iverson\u0026rsquo;s Turing Award Lecture\n  \u0026ldquo;Short words are best and the old words when short are best of all.\u0026rdquo; – Winston Churchill\n  \u0026ldquo;Many big people were chasing me. I didn\u0026rsquo;t know what to do. So I thought I would surprise them and throw it.\u0026rdquo; – Garo Yepremian, Miami placekicker, after a disastrous attempt to throw a pass in the Super Bowl.\n  \u0026ldquo;That book is good in vain which the reader throws away. He only is the master who keeps the mind in pleasing captivity; whose pages are perused with eagerness, and in hope of new pleasure are perused again; and whose conclusion is perceived with an eye of sorrow, such as the traveller casts upon departing day.\u0026rdquo; – Johnson, Lives of the Poets: Dryden\n  \u0026ldquo;Don\u0026rsquo;t worry about what anybody else is going to do. The best way to predict the future is to invent it.\u0026rdquo; – Alan Kay\n  \u0026ldquo;But the audience is right. They\u0026rsquo;re always, always right. You hear directors complain that the advertising was lousy, the distribution is no good, the date was wrong to open the film. I don\u0026rsquo;t believe that. The audience is never wrong. Never.\u0026rdquo; – William Friedkin, in a NYT interview\n  \u0026ldquo;Dealing with failure is easy: Work hard to improve. Success is also easy to handle: You\u0026rsquo;ve solved the wrong problem. Work hard to improve.\u0026rdquo; – Alan Perlis\n  \u0026ldquo;Frankly, I don\u0026rsquo;t think you could have driven a needle up my sphincter using a sledgehammer.\u0026rdquo; – Col. Barry Horne, F-117 pilot, on first mission over Baghdad\n  \u0026ldquo;Two centuries later a most clear-sighted historian of the Second Crusade can find space in a short narrative to record on many occasions the flattery, perjury, perfidy, blasphemy, heresy, arrogance, servility, deceit, pride, cunning and infidelity of the Greeks.\u0026rdquo; – R. W. Southern, The Making of the Middle Ages\n  \u0026ldquo;The imagination of nature is far, far greater than the imagination of man.\u0026rdquo; – Richard Feynman\n  \u0026ldquo;The greatest dangers to liberty lurk in insidious encroachment by men of zeal, well-meaning but without understanding.\u0026rdquo; – Brandeis\n  \u0026ldquo;People who read Cosmopolitan magazine are very different from those who do not.\u0026rdquo; – Donald Berry, Statistics: A Bayesian Perspective\n  \u0026ldquo;The art of handling university students is to make oneself appear, and this almost ostentatiously, to be treating them as adults\u0026hellip;.\u0026rdquo; – Arnold Toynbee, Experiences\n  \u0026ldquo;Americans spend an average of four hours a day watching TV, an hour of that enduring ads. That adds up to an astounding 10% of total leisure time; at current rates, a typical viewer fritters away three years of his life getting bombarded with commercials.\u0026rdquo; – Scott Woolley, Forbes\n  \u0026ldquo;The best writing is rewriting.\u0026rdquo; – E. B. White\n  \u0026ldquo;Modern invention has been a great leveller. A machine may operate far more quickly than a political or economic measure to abolish privilege and wipe out the distinctions of class or finance.\u0026rdquo; – Ivor Brown, The Heart of England\n  \u0026ldquo;If our goal is to write poetry, the only way we are likely to be any good is to try to be as great as the best.\u0026rdquo; – Donald Hall, Poetry and Ambition\n  \u0026ldquo;I am annoyed to find myself continually described by people whom I have never set eyes on as bad-tempered.\u0026rdquo; – Evelyn Waugh, Diary (26 Dec 47)\n  \u0026ldquo;Premature optimization is the root of all evil (or at least most of it) in programming.\u0026rdquo; – Donald Knuth\n  \u0026ldquo;In France those absurd perversions of the art of war which covered themselves under the name of chivalry were more omnipotent than in any other country of Europe. The strength of the armies of Philip and John of Valois was composed of a fiery and undisciplined aristocracy which imagined itself to be the most efficient military force in the world, but which was in reality little removed from an armed mob.\u0026rdquo; – C. W. C. Oman, The Art of War in the Middle Ages\n  \u0026ldquo;The public should always be wondering how it is possible to give so much for the money.\u0026rdquo; – Henry Ford\n  \u0026ldquo;None ever wished it longer than it is.\u0026rdquo; – Johnson on Paradise Lost\n  \u0026ldquo;Many large and high class greengrocers of my acquaintance have never heard of the Golden Wonder potato.\u0026rdquo; – Roy Genders, Vegetables for the Epicure\n  The best lack all conviction, while the worst Are full of passionate intensity. – Yeats, The Second Coming\n  \u0026ldquo;We act as though comfort and luxury were the chief requirements of life, when all that we need to make us happy is something to be enthusiastic about.\u0026rdquo; – Charles Kingsley\n  \u0026ldquo;The path from good to evil goes through bogus.\u0026rdquo; – Tara Ploughman\n  \u0026ldquo;Lisp has jokingly been called \u0026ldquo;the most intelligent way to misuse a computer\u0026rdquo;. I think that description is a great compliment because it transmits the full flavor of liberation: it has assisted a number of our most gifted fellow humans in thinking previously impossible thoughts.\u0026rdquo; – Edsger Dijkstra, CACM, 15:10\n  \u0026ldquo;Many who burnt heretics in the ordinary way of their business were otherwise excellent people.\u0026rdquo; – G. M. Trevelyan, \u0026ldquo;Bias in History\u0026rdquo;\n  \u0026ldquo;He became an object of ridicule in 1993 when a paper published an intercepted phone call in which he told his lover Camilla Parker Bowles he wanted to be reincarnated as her tampon.\u0026rdquo; – Reuters story, on Prince Charles\n  \u0026ldquo;We\u0026rsquo;re even wrong about which mistakes we\u0026rsquo;re making.\u0026rdquo; – Carl Winfeld\n  \u0026ldquo;From this place she sent into the world those novels, which by many have been placed on the same shelf as the works of a D\u0026rsquo;Arblay and an Edgeworth.\u0026rdquo; – Henry Austen on his sister Jane, in a preface to Persuasion\n  \u0026ldquo;The key to performance is elegance, not battalions of special cases.\u0026rdquo; – Jon Bentley and Doug McIlroy\n  \u0026ldquo;The economic depression that struck Europe in the fourteenth century was followed ultimately by economic and technological recovery. But the depression we have moved into will have no end. We can anticipate centuries of decline and exhaustion.\u0026rdquo; – Jean Gimpel, The Medieval Machine, 1975\n  \u0026ldquo;Politics is not the art of the possible. It consists in choosing between the disastrous and the unpalatable.\u0026rdquo; – J. K. Galbraith, Letter to Kennedy, 1962\n  \u0026ldquo;A typical dinner from the ape menu would be tofu bake with ratatouille of aubergine, onions and sweet peppers, with pearled barley and vegetable side dishes, says the team.\u0026rdquo; – New Scientist\n  \u0026ldquo;Guy Steele leads a small team of researchers in Burlington, Massachusetts, who are taking on an enormous challenge — create a programming language better than Java.\u0026rdquo; – Sun.Com (my italics)\n  \u0026ldquo;I had my own reactions to Paul\u0026rsquo;s essay — on the whole I liked it but when I connected some dots I found some suggestions of things I strongly disliked — not so much in the essay as suggested by it.\u0026rdquo; – reaction to What You Can\u0026rsquo;t Say in a blog\n  \u0026ldquo;Your twenties are always an apprenticeship, but you don\u0026rsquo;t always know what for.\u0026rdquo; – Jan Houtema\n  \u0026ldquo;In addition, the board rewrote the definition of science, so that it is no longer limited to the search for natural explanations of phenomena.\u0026rdquo; – AP story on Kansas Board of Education\n  \u0026ldquo;A danger sign that fellow-obsessionals will at once recognize is the tendency to regard the happiest moments of your life as those that occur when someone who has an appointment to see you is prevented from coming.\u0026rdquo; – Peter Medawar, Memoirs of a Thinking Radish\n  \u0026ldquo;Never offer what you\u0026rsquo;d hate someone for accepting.\u0026rdquo; – Tara Ploughman\n  \u0026ldquo;The pagans were incensed at the rashness of a recent and obscure sect, which presumed to accuse their countrymen of error, and to devote their ancestors to eternal misery.\u0026rdquo; – Gibbon, The Decline and Fall of the Roman Empire\n  \u0026ldquo;Simultaneously reifying and challenging hegemonic codes of race, class, gender and regional or national identity, his characters explore the complex and changing postmodern cultural landscape.\u0026rdquo; – Robert Bennett, English professor at Montana State, announcing a panel discussion about Brad Pitt\n  \u0026ldquo;In the councils of government, we must guard against the acquisition of unwarranted influence, whether sought or unsought, by the military-industrial complex. The potential for the disastrous rise of misplaced power exists and will persist.\u0026rdquo; – Eisenhower, Farewell Address\n  \u0026ldquo;Keep away from people who try to belittle your ambitions. Small people always do that, but the really great make you feel that you, too, can become great.\u0026rdquo; – Mark Twain\n  \u0026ldquo;However little television you watch, watch less.\u0026rdquo; – David McCullough\n  \u0026ldquo;Any word you have to hunt for in a thesaurus is the wrong word.\u0026rdquo; – Stephen King\n  \u0026ldquo;The people can always be brought to the bidding of the leaders. That is easy. All you have to do is tell them they are being attacked, and denounce the pacifists for lack of patriotism, and exposing the country to greater danger.\u0026rdquo; – Goering at the Nuremberg Trials\n  \u0026ldquo;As all these results were obtained, not by any heroic method, but by patient and detailed reasoning, I began to think it probable that philosophy had erred in adopting heroic remedies for intellectual difficulties, and that solutions were to be found merely by greater care and accuracy. This view I have come to hold more and more strongly as time went on, and it has led me to doubt whether philosophy, as a study distinct from science and possessed of a method of its own, is anything more than an unfortunate legacy from theology.\u0026rdquo; – Bertrand Russell, \u0026ldquo;Logical Atomism\u0026rdquo;\n  \u0026ldquo;Get the important things right.\u0026rdquo; – N. P. Calderwood\n  \u0026ldquo;The power of instruction is seldom of much efficacy except in those happy dispositions where it is almost superfluous.\u0026rdquo; – Gibbon\n  \u0026ldquo;I do not know what the Lord\u0026rsquo;s anointed, his Vicegerent upon earth, divinely appointed by him, and accountable to none but him for his actions, will either think or do, upon these symptoms of reason and good sense which seem to be breaking out all over France: but this I foresee, that, before the end of this century, the trade of both King and Priest will not be half so good a one as it has been.\u0026rdquo; – Chesterfield, letter to his son, 13 Apr 1752\n  \u0026ldquo;filter(P, S) is almost always written clearer as [x for x in S if P(x)]\u0026rdquo; – Guido van Rossum on Python\n  \u0026ldquo;I\u0026rsquo;m surrounded by postmodern idiots and blatherers. Your writings give me hope.\u0026rdquo; – email from a reader\n  \u0026ldquo;In the last analysis, productivity of labour is the most important, the principal thing for the victory of the new social system.\u0026rdquo; – Lenin, quoted in First Five-Year Plan for the Development of the National Economy of the People\u0026rsquo;s Republic of China in 1953-1957\n  \u0026ldquo;Most interesting phenomena have multiple causes.\u0026rdquo; – N. P. Calderwood\n  \u0026ldquo;From 1911 to 1920, the mood of the city varied between utter dullness and tremendous excitement.\u0026rdquo; – Arthur Coffman, An Illustrated History of Palo Alto\n  \u0026ldquo;A new scientific truth does not triumph by convincing its opponents and making them see the light, but rather because its opponents eventually die, and a new generation grows up that is familiar with it.\u0026rdquo; – Max Planck\n  \u0026ldquo;No man who ever held the office of President would congratulate a friend on obtaining it.\u0026rdquo; – John Adams\n  \u0026ldquo;PowerPoint makes us stupid.\u0026rdquo; – General James N. Mattis, USMC\n  \u0026ldquo;The best way to do something \u0026lsquo;lean\u0026rsquo; is to gather a tight group of people, give them very little money, and very little time.\u0026rdquo; – Bob Klein, chief engineer of the F-14 program\n  \u0026ldquo;But camels, though odious to view and endowed with the offensive spirit, did not enjoy the blessing of pachydermaty.\u0026rdquo; – F. E. Adcock, The Greek and Macedonian Art of War\n  \u0026ldquo;As it turned out, the obvious clearly stated, and combined with new observations, was sometimes close to revolutionary.\u0026rdquo; – Wallace Stegner on John Wesley Powell\n  \u0026ldquo;Focusing is about saying no.\u0026rdquo; – Steve Jobs\n  \u0026ldquo;The very word \u0026ldquo;secrecy\u0026rdquo; is repugnant in a free and open society; and we are as a people inherently and historically opposed to secret societies, to secret oaths and to secret proceedings. We decided long ago that the dangers of excessive and unwarranted concealment of pertinent facts far outweighed the dangers which are cited to justify it. Even today, there is little value in opposing the threat of a closed society by imitating its arbitrary restrictions. Even today, there is little value in insuring the survival of our nation if our traditions do not survive with it.\u0026rdquo; – John F. Kennedy\n  \u0026ldquo;In the Zenith Color chassis there are no printed circuits, no production shortcuts. Every connection is carefully hand-wired with the same exacting care that makes Zenith America\u0026rsquo;s largest selling TV, and your best Color TV buy.\u0026rdquo; – Zenith TV ad, 1964\n  \u0026ldquo;Semper aut discere, aut docere, aut scribere dulce habui.\u0026rdquo; – Bede\n  \u0026ldquo;The qualities that made for success in a fighter-pilot seemed to be just those sturdy qualities that made for success in other professions; observation, initiative, determination, courage, including the courage to run away. In course of time it appeared that men who had a private axe to grind beyond the public axe of the King\u0026rsquo;s enemies were especially successful.\u0026rdquo; – Jim Bailey, The Sky Suspended\n  \u0026ldquo;Everything about it was visibly mis-shapen, corrupt, crawling, verminous; for a time I could not bear to look at it, and passed with averted eyes; recovering from this weakness, I forced myself to look, and to face day by day the question: a thing so obviously, so incontrovertibly, so indefensibly bad, why had Scott done it?\u0026rdquo; – R. G. Collingwood on the Albert Memorial\n  \u0026ldquo;Anybody who cares less about wanting to be cool, I think, is more interesting.\u0026rdquo; – Aimee Mann\n  \u0026ldquo;The late Richard Feynman, a superb physicist, said once as we talked about the laser that the way to tell a great idea is that, when people hear it, they say, \u0026lsquo;Gee, I could have thought of that.'\u0026rdquo; – Charles Townes, How the Laser Happened\n  \u0026ldquo;If we chose always to be wise we should rarely need to be virtuous. But inclinations which we could easily overcome irresistibly attract us. We give in to slight temptations and minimize the danger. We fall insensibly into dangerous situations, from which we could easily have safeguarded ourselves, but from which we cannot withdraw without heroic efforts which appal us. So finally, as we tumble into the abyss, we ask God why he has made us so feeble. But, in spite of ourselves, He replies through our consciences: \u0026lsquo;I have made you too feeble to climb out of the pit, because I made you strong enough not to fall in.'\u0026rdquo; – Rousseau, Confessions, Cohen trans.\n  \u0026ldquo;Constantly fortified with the new blood of immigrants who saw America as a place where anything was possible, the nation had adopted an ethos that elevated problem solving to the status of religion.\u0026rdquo; – John Hoyt Williams, A Great and Shining Road\n  \u0026ldquo;That 95 per cent. fail of those who start in business upon their own account seems incredible, and yet such are said to be the statistics upon the subject.\u0026rdquo; – Andrew Carnegie, 1896\n  \u0026ldquo;You should never turn a man\u0026rsquo;s generosity as a sword against him. Any virtue that a man has, even if he has many vices, should not be used as a tool against him.\u0026rdquo; – Rabi to Feynman\n  \u0026ldquo;You can\u0026rsquo;t say I didn\u0026rsquo;t try really hard, \u0026lsquo;cause I\u0026rsquo;m trying really hard to be good.\u0026rdquo; – Tom Petty\n  \u0026ldquo;He begins working calculus problems in his head as soon as he awakens. He did calculus while driving in his car, while sitting in the living room, and while lying in bed at night.\u0026rdquo; – divorce complaint of Richard Feynman\u0026rsquo;s second wife\n  \u0026ldquo;The development of this aircraft was long and complex even by Soviet standards, partially explained by the fact that its entire design team was in jail.\u0026rdquo; – Howard Moon on the TU-2\n  \u0026ldquo;It is said that there is a technical term for people who believe that little boys and little girls are born indistinguishable and are molded into their natures by parental socialization. The term is \u0026lsquo;childless.'\u0026rdquo; – Steven Pinker\n  \u0026ldquo;When you have eliminated the impossible, whatever remains, however improbable, must be the truth.\u0026rdquo; – Sherlock Holmes\n  His notions fitted things so well, That which was which he could not tell; But oftentimes mistook th\u0026rsquo; one For th\u0026rsquo; other, as great clerks have done. – Samuel Butler, Hudibras\n  \u0026ldquo;A complex system that works is invariably found to have evolved from a simple system that worked. The inverse proposition also appears to be true: A complex system designed from scratch never works and cannot be made to work.\u0026rdquo; – John Gall\n  \u0026ldquo;The Muslims of al-Andalus had nothing to learn from their Christian neighbours and were incurious about them. Geographers\u0026rsquo; accounts of Christian Spain tended to be cursory in the extreme: it was cold, the inhabitants were barbarians who ate pigs, you could get slaves there — that was about the sum of it.\u0026rdquo; – Richard Fletcher, Moorish Spain\n  \u0026ldquo;When the enemy is making a false movement we must take good care not to interrupt him.\u0026rdquo; – Napoleon\n  \u0026ldquo;Leave me alone, I\u0026rsquo;m trying to build! Don\u0026rsquo;t you know how people build? By concentrating!\u0026rdquo; – my 5 year old son, building Lego\n  \u0026ldquo;An expert is a man who has made all the mistakes which can be made in a very narrow field.\u0026rdquo; – Niels Bohr\n  \u0026ldquo;Don\u0026rsquo;t fear moving slowly. Fear standing still.\u0026rdquo; – Chinese proverb\n  \u0026ldquo;I think a life properly lived is just learn, learn, learn all the time.\u0026rdquo; – Charlie Munger\n  \u0026ldquo;The handicap under which most beginning writers struggle is that they don\u0026rsquo;t know how to write.\u0026rdquo; – Wodehouse\n  \u0026ldquo;Then in 1888 came the publication of Denton\u0026rsquo;s history of England in the fifteenth century. This was a masterpiece of egregious perversity, depicting the later Middle Ages as a culminating period of ruinous taxation, iniquitous labour laws, demoralizing pestilences, and lavish dissipation of national resources upon violent and embittered domestic feuds and futile and indecisive foreign wars. The credulity of even the most undiscriminating reader was taxed to a degree by a portrayal in which horror succeeded upon cataclysm, in a thickening atmosphere of crime and terror, want, degradation, and wretchedness.\u0026rdquo; – A. R. Bridbury\n  \u0026ldquo;We are all agreed that your theory is crazy. The question that divides us is whether it is crazy enough to have a chance of being correct.\u0026rdquo; – Neils Bohr\n  \u0026ldquo;Pessimists sound smart. Optimists make money.\u0026rdquo; – Nat Friedman\n  \u0026ldquo;Immature poets imitate; mature poets steal; bad poets deface what they take, and good poets make it into something better, or at least something different.\u0026rdquo; – T. S. Eliot\n  \u0026ldquo;The most exciting phrase to hear in science, the one that heralds new discoveries, is not \u0026lsquo;Eureka\u0026rsquo; but \u0026lsquo;That\u0026rsquo;s funny\u0026hellip;\u0026rsquo; – Isaac Asimov\n  \u0026ldquo;We always want to make sure that our machines haven’t by accident learned something that isn’t what we intended.\u0026rdquo; – Susan Wojcicki\n  \u0026ldquo;The population is made up of four types of people: A small number hunt witches. A large number go along with the hunt. A larger number are silent. A tiny number oppose it. The final group — as if by magic — become witches.\u0026rdquo; – Bret Weinstein\n  \u0026ldquo;People who can\u0026rsquo;t laugh at themselves will always be outwitted by people who can.\u0026rdquo; – T. K. Coleman\n  \u0026ldquo;Political correctness is America\u0026rsquo;s newest form of intolerance, and it is especially pernicious because it comes disguised as tolerance. It presents itself as fairness, yet attempts to restrict and control people\u0026rsquo;s language with strict codes and rigid rules.\u0026rdquo; – George Carlin\n  ","href":"/quotes/","title":"Quotes"},{"content":" My name is Prasenjit Manna. This is my personal blog. Over the years I learnt and grew my knowledge. Thanks to everyone whoever have helped me on this journey. This is my new initiative to give back to the society.\nI drink tea, coffee, play with my son, and read books. I research and use tools for that improve my thinking, productivity, and life in general. I strive to reduce friction in my life, keep things minimal, and simplify. Recently I started writing technical blogs.\nMy Bio: I am a technical leader at Cisco Systems, Bangalore, India. My background is in software development, specially in embedded routing \u0026amp; optical systems. I have Bachelor’s degree in Computer Science from Haldia Institute of Technology, Vidyasagar University and Master’s degree from Birla Institute Technology, Pilani. I have prior experiences at startups like NetDevices (acquired by Alcatel-Lucent(now Nokia)), FutureSoft (now Aricent/Altran), Alumnus Software Ltd.\n","href":"/about/","title":"about"},{"content":"It\u0026rsquo;s been long time, I was keep thinking to write blog. But, always getting delayed due to fear, whether I am good at writing, or people will like it or not, etc. Finally, I overcome this fear and started writing from new year, 2020.\nJust to give little background about me, myself, Prasenjit Manna, working with networking industry as programmer, developer, architect, influencer since 2000. My area of interest is always routing, switching, manageability, optical, etc. Over the last two decades, lots of market dynamic has changed for engineers, and for the companies also. As a result, I have gained vast knowledge in different fields.\nMy interest is to write blog on technical knowledge, specially, software aspect of networking devices. Few of my initial writes will be on SDN, network manageability.\nJoin my email list to get direct access to new blog posts.\n ","href":"/blogs/2020-01-01-first-post/","title":"My First Blog Post"},{"content":"","href":"/search/","title":"Search"},{"content":"","href":"/series/","title":"Series"}]
